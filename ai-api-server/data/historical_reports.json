[
  {
    "id": "1755934709042",
    "timestamp": "2025-08-23T07:38:29.042Z",
    "baseline": {
      "name": "test-report-baseline",
      "timestamp": "2025-08-23T07:37:44.583Z",
      "metrics": {
        "checks_rate": 0.952,
        "http_req_failed_rate": 0.015,
        "inp_avg_ms": 65,
        "inp_p95_ms": 90,
        "login_avg_ms": 850,
        "login_p95_ms": 1150,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "users_api_avg_ms": 320,
        "users_api_p95_ms": 480,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "memory_usage_avg_mb": 120,
        "cpu_utilization_avg_pct": 35,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "fcp_avg_ms": 1100,
        "fcp_p95_ms": 1400,
        "lcp_avg_ms": 1650,
        "lcp_p95_ms": 2100,
        "cls_avg": 0.035,
        "ttfb_avg_ms": 280,
        "ttfb_p95_ms": 450,
        "meeting_creation_avg_ms": 650,
        "calendar_navigation_avg_ms": 380,
        "resource_load_avg_ms": 420,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-report-current",
      "timestamp": "2025-08-23T07:37:02.649Z",
      "metrics": {
        "checks_rate": 0.496,
        "http_req_failed_rate": 0.085,
        "inp_avg_ms": 58,
        "inp_p95_ms": 80,
        "login_avg_ms": 4200,
        "login_p95_ms": 6200,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "users_api_avg_ms": 9200,
        "users_api_p95_ms": 14200,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "memory_usage_avg_mb": 285,
        "cpu_utilization_avg_pct": 85,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "fcp_avg_ms": 5200,
        "fcp_p95_ms": 7200,
        "lcp_avg_ms": 8900,
        "lcp_p95_ms": 12800,
        "cls_avg": 0.038,
        "ttfb_avg_ms": 1850,
        "ttfb_p95_ms": 2800,
        "meeting_creation_avg_ms": 6800,
        "calendar_navigation_avg_ms": 4500,
        "resource_load_avg_ms": 5200,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Database Query N+1 Problem in User Retrieval",
        "description": "Inefficient database querying causing massive performance degradation in /api/users endpoint",
        "business_impact": "608% increase in dashboard load time, potential revenue loss due to poor user experience",
        "root_cause_analysis": "Sequential database queries for each user's meetings, events, and notifications",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "getUsersWithDetails"
            ],
            "lines": [
              400,
              410,
              420
            ],
            "issue": "N+1 query pattern with nested asynchronous database calls"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "users.forEach((user) => {\n  db.all(`SELECT * FROM meetings WHERE created_by = ?`, [user.id], (err, meetings) => {\n    db.all(`SELECT * FROM calendar_events WHERE user_id = ?`, [user.id], (err, events) => {\n      db.all(`SELECT * FROM notifications WHERE user_id = ?`, [user.id], (err, notifications) => {\n        // Nested queries for each user\n      });\n    });\n  });\n});",
            "optimized_code": "const userIds = users.map(user => user.id);\nconst query = `\nSELECT \n  u.id, u.username, \n  json_group_array(distinct m.id) as meetings,\n  json_group_array(distinct ce.id) as events,\n  json_group_array(distinct n.id) as notifications\nFROM users u\nLEFT JOIN meetings m ON m.created_by = u.id\nLEFT JOIN calendar_events ce ON ce.user_id = u.id\nLEFT JOIN notifications n ON n.user_id = u.id\nWHERE u.id IN (?)\nGROUP BY u.id`;\n\ndb.all(query, [userIds], (err, processedUsers) => { });",
            "explanation": "Single query replaces N+1 database calls, reducing query complexity and network roundtrips",
            "expected_improvement": "Up to 90% reduction in database query time"
          }
        ],
        "immediate_actions": [
          "Implement single JOIN query",
          "Add database indexing on user_id columns",
          "Limit result set size"
        ],
        "long_term_solutions": [
          "Implement database-level aggregation",
          "Use prepared statements",
          "Consider database denormalization"
        ],
        "affected_metrics": [
          "users_api_avg_ms",
          "users_api_p95_ms",
          "dashboard_load_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Reduce API response time by 75-90%"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Memory Leaks in WebSocket Connection Handling",
        "description": "Unbounded memory growth through persistent WebSocket connections without proper cleanup",
        "business_impact": "Increasing memory consumption leading to potential server crashes and degraded performance",
        "root_cause_analysis": "Continuous accumulation of connection data without proper resource management",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "WebSocket connection handler"
            ],
            "lines": [
              1600,
              1610,
              1620
            ],
            "issue": "No connection cleanup, growing message history, and large data storage"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "const activeConnections = new Map();\n\nwss.on('connection', (ws, req) => {\n  const connectionId = Date.now() + Math.random();\n  activeConnections.set(connectionId, {\n    ws,\n    messageHistory: [], // Growing indefinitely\n    largeData: new Array(10000).fill(0)\n  });\n\n  ws.on('close', () => {\n    console.log('Connection closed');\n    // No actual cleanup\n  });",
            "optimized_code": "const MAX_CONNECTIONS = 1000;\nconst MAX_HISTORY_LENGTH = 100;\n\nconst activeConnections = new Map();\n\nfunction cleanupConnections() {\n  if (activeConnections.size > MAX_CONNECTIONS) {\n    const oldestConnections = [...activeConnections.entries()]\n      .sort((a, b) => a[1].connectionTime - b[1].connectionTime)\n      .slice(0, activeConnections.size - MAX_CONNECTIONS);\n    \n    oldestConnections.forEach(([id]) => activeConnections.delete(id));\n  }\n}\n\nwss.on('connection', (ws, req) => {\n  const connectionId = Date.now() + Math.random();\n  const connection = {\n    ws,\n    connectionTime: new Date(),\n    messageHistory: [], // Bounded list\n    userId: null\n  };\n\n  activeConnections.set(connectionId, connection);\n  cleanupConnections();\n\n  ws.on('message', (message) => {\n    if (connection.messageHistory.length > MAX_HISTORY_LENGTH) {\n      connection.messageHistory.shift(); // Remove oldest message\n    }\n    connection.messageHistory.push(message);\n  });\n\n  ws.on('close', () => {\n    activeConnections.delete(connectionId);\n  });",
            "explanation": "Implement connection and message history size limits, with automatic cleanup mechanism",
            "expected_improvement": "Prevent unbounded memory growth, reduce memory consumption by 70-80%"
          }
        ],
        "immediate_actions": [
          "Implement connection count limit",
          "Add message history size restriction",
          "Create connection cleanup mechanism"
        ],
        "long_term_solutions": [
          "Implement more sophisticated connection management",
          "Use external session/connection tracking",
          "Implement connection expiration"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct",
          "successful_requests_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce memory usage by 70-80%, improve server stability"
      }
    ],
    "summary": {
      "improved": 5,
      "worse": 26,
      "same": 0,
      "unknown": 3
    }
  },
  {
    "id": "1755934449017",
    "timestamp": "2025-08-23T07:34:09.017Z",
    "baseline": {
      "name": "test-report-baseline",
      "timestamp": "2025-08-23T07:33:24.926Z",
      "metrics": {
        "checks_rate": 0.952,
        "http_req_failed_rate": 0.015,
        "inp_avg_ms": 65,
        "inp_p95_ms": 90,
        "login_avg_ms": 850,
        "login_p95_ms": 1150,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "users_api_avg_ms": 320,
        "users_api_p95_ms": 480,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "memory_usage_avg_mb": 120,
        "cpu_utilization_avg_pct": 35,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "fcp_avg_ms": 1100,
        "fcp_p95_ms": 1400,
        "lcp_avg_ms": 1650,
        "lcp_p95_ms": 2100,
        "cls_avg": 0.035,
        "ttfb_avg_ms": 280,
        "ttfb_p95_ms": 450,
        "meeting_creation_avg_ms": 650,
        "calendar_navigation_avg_ms": 380,
        "resource_load_avg_ms": 420,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-report-current",
      "timestamp": "2025-08-23T07:32:51.497Z",
      "metrics": {
        "checks_rate": 0.496,
        "http_req_failed_rate": 0.085,
        "inp_avg_ms": 58,
        "inp_p95_ms": 80,
        "login_avg_ms": 4200,
        "login_p95_ms": 6200,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "users_api_avg_ms": 9200,
        "users_api_p95_ms": 14200,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "memory_usage_avg_mb": 285,
        "cpu_utilization_avg_pct": 85,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "fcp_avg_ms": 5200,
        "fcp_p95_ms": 7200,
        "lcp_avg_ms": 8900,
        "lcp_p95_ms": 12800,
        "cls_avg": 0.038,
        "ttfb_avg_ms": 1850,
        "ttfb_p95_ms": 2800,
        "meeting_creation_avg_ms": 6800,
        "calendar_navigation_avg_ms": 4500,
        "resource_load_avg_ms": 5200,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic Database Query Performance Degradation",
        "description": "Database query performance has experienced a dramatic 177.8% increase in average latency (45ms → 125ms) with p95 latency spiking by 220.5%",
        "business_impact": "Potential revenue loss up to 40% due to prolonged transaction times and increased user frustration",
        "root_cause_analysis": "Likely caused by missing database indexes, inefficient query structures, or unoptimized database schema",
        "immediate_actions": [
          "Analyze and reindex critical database tables",
          "Implement query-level caching mechanisms",
          "Temporarily scale database infrastructure"
        ],
        "code_optimizations": [
          "Use database explain plans to identify slow queries",
          "Implement pagination for large dataset retrievals",
          "Add composite indexes on frequently queried columns"
        ],
        "long_term_solutions": [
          "Comprehensive database schema review",
          "Implement read replicas for query distribution",
          "Migrate to more performant database engine if necessary"
        ],
        "affected_metrics": [
          "database_query_avg_ms",
          "database_query_p95_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-80% query performance recovery"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory Leaks and Resource Exhaustion",
        "description": "Memory usage dramatically increased from 120MB to 285MB (+137.5%), coupled with CPU utilization spike from 35% to 85%",
        "business_impact": "System instability, potential service interruptions, increased infrastructure costs",
        "root_cause_analysis": "Probable memory leaks in Node.js application, inefficient JavaScript event loop management, or uncontrolled resource allocation",
        "immediate_actions": [
          "Trigger heap memory snapshot analysis",
          "Implement aggressive garbage collection monitoring",
          "Temporarily increase server resources"
        ],
        "code_optimizations": [
          "Use memory profiling tools like heapdump",
          "Implement object pooling for frequent allocations",
          "Add explicit memory cleanup in long-running processes"
        ],
        "long_term_solutions": [
          "Refactor memory-intensive components",
          "Implement streaming for large data processing",
          "Design stateless microservices architecture"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-70% resource utilization reduction"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Critical Web Vitals Performance Degradation",
        "description": "Significant performance regression in Core Web Vitals: FCP increased 372.7%, LCP by 439.4%, TTFB by 560.7%",
        "business_impact": "Potential 30-50% user drop-off, severe SEO ranking penalties",
        "root_cause_analysis": "Likely caused by unoptimized frontend bundle, inefficient server-side rendering, or network bottlenecks",
        "immediate_actions": [
          "Implement critical CSS inlining",
          "Enable server-side caching",
          "Optimize asset delivery through CDN"
        ],
        "code_optimizations": [
          "Code-split React bundles",
          "Implement lazy loading for non-critical components",
          "Minimize render-blocking resources"
        ],
        "long_term_solutions": [
          "Migrate to server-side rendering framework",
          "Implement progressive loading strategies",
          "Use performance budgets in build process"
        ],
        "affected_metrics": [
          "fcp_avg_ms",
          "lcp_avg_ms",
          "ttfb_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "high",
        "expected_improvement": "40-60% web vitals performance recovery"
      }
    ],
    "summary": {
      "improved": 5,
      "worse": 26,
      "same": 0,
      "unknown": 3
    }
  },
  {
    "id": "1755922587568",
    "timestamp": "2025-08-23T04:16:27.568Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T04:14:59.589Z",
      "metrics": {
        "checks_rate": 0.952,
        "http_req_failed_rate": 0.015,
        "inp_avg_ms": 65,
        "inp_p95_ms": 90,
        "login_avg_ms": 850,
        "login_p95_ms": 1150,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "users_api_avg_ms": 320,
        "users_api_p95_ms": 480,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "memory_usage_avg_mb": 120,
        "cpu_utilization_avg_pct": 35,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "fcp_avg_ms": 1100,
        "fcp_p95_ms": 1400,
        "lcp_avg_ms": 1650,
        "lcp_p95_ms": 2100,
        "cls_avg": 0.035,
        "ttfb_avg_ms": 280,
        "ttfb_p95_ms": 450,
        "meeting_creation_avg_ms": 650,
        "calendar_navigation_avg_ms": 380,
        "resource_load_avg_ms": 420,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T04:14:25.948Z",
      "metrics": {
        "checks_rate": 0.496,
        "http_req_failed_rate": 0.085,
        "inp_avg_ms": 58,
        "inp_p95_ms": 80,
        "login_avg_ms": 4200,
        "login_p95_ms": 6200,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "users_api_avg_ms": 9200,
        "users_api_p95_ms": 14200,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "memory_usage_avg_mb": 285,
        "cpu_utilization_avg_pct": 85,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "fcp_avg_ms": 5200,
        "fcp_p95_ms": 7200,
        "lcp_avg_ms": 8900,
        "lcp_p95_ms": 12800,
        "cls_avg": 0.038,
        "ttfb_avg_ms": 1850,
        "ttfb_p95_ms": 2800,
        "meeting_creation_avg_ms": 6800,
        "calendar_navigation_avg_ms": 4500,
        "resource_load_avg_ms": 5200,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.95,
        "title": "N+1 Query Problem in User Retrieval",
        "description": "Inefficient database querying causing massive performance degradation in users API endpoint",
        "business_impact": "Up to 2858% increase in API response times, potential system overload and poor user experience",
        "root_cause_analysis": "Sequential database queries for each user's related data instead of using efficient joins",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.get('/api/users')"
            ],
            "lines": [
              240,
              250,
              260
            ],
            "issue": "N+1 query pattern with nested database lookups"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "users.forEach((user) => {\n  db.all(`SELECT * FROM meetings WHERE created_by = ?`, [user.id], (err, meetings) => {\n    // Nested query for each user\n  });\n});",
            "optimized_code": "const query = `\nSELECT u.*, \n  json_group_array(json_object(\n    'id', m.id, \n    'title', m.title\n  )) as meetings\nFROM users u\nLEFT JOIN meetings m ON u.id = m.created_by\nGROUP BY u.id\n`;\ndb.all(query, (err, usersWithMeetings) => { ... });",
            "explanation": "Use a single join query with JSON aggregation to retrieve all user and meeting data in one database call",
            "expected_improvement": "90-95% reduction in query time and database load"
          }
        ],
        "immediate_actions": [
          "Replace nested queries with efficient join",
          "Add database indexing on foreign key columns",
          "Implement connection pooling"
        ],
        "long_term_solutions": [
          "Implement database query optimization strategy",
          "Use GraphQL or efficient ORM for complex data fetching",
          "Consider read replicas for heavy query workloads"
        ],
        "affected_metrics": [
          "users_api_avg_ms",
          "users_api_p95_ms",
          "database_query_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "medium",
        "expected_improvement": "Up to 95% reduction in API response times"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Memory Leak in WebSocket Connections",
        "description": "Unmanaged WebSocket connections causing memory exhaustion and potential system crash",
        "business_impact": "Increased memory usage, potential system instability, degraded user experience",
        "root_cause_analysis": "Connections not properly closed, continuously growing memory consumption",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "wss.on('connection')",
              "startPeriodicTasks()"
            ],
            "lines": [
              1450,
              1470,
              1500
            ],
            "issue": "No proper WebSocket connection cleanup mechanism"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "wss.on('connection', (ws) => {\n  const connectionId = Date.now() + Math.random();\n  activeConnections.set(connectionId, { ws, ... });\n\n  ws.on('close', () => {\n    console.log('WebSocket connection closed');\n    // activeConnections.delete(connectionId); // Commented out\n  });\n});",
            "optimized_code": "wss.on('connection', (ws) => {\n  const connectionId = Date.now() + Math.random();\n  activeConnections.set(connectionId, { ws, ... });\n\n  ws.on('close', () => {\n    activeConnections.delete(connectionId);\n    ws.terminate();\n  });\n\n  // Add periodic cleanup\n  setInterval(() => {\n    for (const [id, conn] of activeConnections) {\n      if (conn.ws.readyState === WebSocket.CLOSED) {\n        activeConnections.delete(id);\n      }\n    }\n  }, 60000);\n});",
            "explanation": "Implement proper WebSocket connection cleanup and periodic connection management",
            "expected_improvement": "80-90% reduction in memory leaks"
          }
        ],
        "immediate_actions": [
          "Add connection cleanup logic",
          "Implement WebSocket connection timeout",
          "Remove global connection storage"
        ],
        "long_term_solutions": [
          "Use connection management library",
          "Implement robust WebSocket connection tracking",
          "Add monitoring for active connections"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce memory consumption by 70-80%"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.85,
        "title": "Inefficient Login and Authentication Process",
        "description": "Heavy computational overhead during login causing significant response time increase",
        "business_impact": "608% increase in dashboard load time, potential user frustration and abandonment",
        "root_cause_analysis": "Synchronous password hashing, unnecessary computations during authentication",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.post('/api/auth/login')"
            ],
            "lines": [
              380,
              400,
              420
            ],
            "issue": "Blocking synchronous operations and unnecessary heavy computations"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "const isValidPassword = bcrypt.compareSync(password, user.password);\n\n// Heavy computation during login\nfor (let i = 0; i < 100000; i++) {\n  heavyComputationResults.push(Math.random() * i);\n}\n\nconst token = jwt.sign(...);",
            "optimized_code": "const isValidPassword = await bcrypt.compare(password, user.password);\n\n// Remove unnecessary computations\nconst token = jwt.sign(..., { \n  expiresIn: '1h', \n  algorithm: 'HS256'\n});\n\n// Use async/await and remove blocking operations\nawait updateUserLoginMetadata(user.id);",
            "explanation": "Use asynchronous password comparison, remove unnecessary computations, optimize token generation",
            "expected_improvement": "70-80% reduction in login time"
          }
        ],
        "immediate_actions": [
          "Replace synchronous bcrypt methods",
          "Remove unnecessary computational loops",
          "Implement proper async token generation"
        ],
        "long_term_solutions": [
          "Implement rate limiting for login attempts",
          "Add multi-factor authentication",
          "Implement more efficient authentication strategies"
        ],
        "affected_metrics": [
          "login_avg_ms",
          "login_p95_ms",
          "dashboard_load_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce login and dashboard load times by 60-70%"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.8,
        "title": "Excessive React Re-renders and State Management",
        "description": "Inefficient state management causing unnecessary component re-renders",
        "business_impact": "Degraded frontend performance, increased CPU utilization",
        "root_cause_analysis": "Multiple state variables, heavy computations in render, lack of memoization",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "App",
              "login",
              "loadAllUserData"
            ],
            "lines": [
              150,
              200,
              250
            ],
            "issue": "Excessive state updates and heavy computations during render"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "const [user, setUser] = useState(null);\nconst [users, setUsers] = useState([]);\nconst [meetings, setMeetings] = useState([]);\n// Multiple independent state variables\n\n// Heavy computation in render\nconst computeExpensiveData = () => { ... };\nconst expensiveData = computeExpensiveData();",
            "optimized_code": "const [appState, setAppState] = useState({\n  user: null,\n  users: [],\n  meetings: []\n});\n\n// Use useMemo for expensive computations\nconst expensiveData = useMemo(() => {\n  return computeExpensiveData();\n}, [/* minimal dependencies */]);\n\n// Batch state updates\nconst updateAppState = useCallback((updates) => {\n  setAppState(prev => ({\n    ...prev,\n    ...updates\n  }));\n}, []);",
            "explanation": "Consolidate state management, use memoization, implement efficient state updates",
            "expected_improvement": "50-60% reduction in unnecessary re-renders"
          }
        ],
        "immediate_actions": [
          "Consolidate state into fewer, more efficient state objects",
          "Implement useMemo for expensive computations",
          "Use useCallback for stable function references"
        ],
        "long_term_solutions": [
          "Consider state management libraries like Redux or Zustand",
          "Implement component-level performance optimization",
          "Use React.memo and proper dependency management"
        ],
        "affected_metrics": [
          "cpu_utilization_avg_pct",
          "fcp_avg_ms",
          "lcp_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "high",
        "expected_improvement": "Improve frontend rendering performance by 50-60%"
      },
      {
        "type": "code_optimization",
        "severity": "medium",
        "confidence": 0.75,
        "title": "Heavy Periodic Background Tasks",
        "description": "Resource-intensive background tasks causing system performance degradation",
        "business_impact": "Increased server load, potential system instability",
        "root_cause_analysis": "Frequent heavy computations in periodic tasks without proper throttling",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "startPeriodicTasks()",
              "generateHeavyNotifications()"
            ],
            "lines": [
              1600,
              1620,
              1640
            ],
            "issue": "Uncontrolled generation of large data structures in interval tasks"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "function startPeriodicTasks() {\n  notificationInterval = setInterval(() => {\n    db.all(`SELECT id FROM users`, (err, users) => {\n      users.forEach(user => {\n        const notifications = generateHeavyNotifications(user.id);\n        // Send to all connected WebSockets\n      });\n    });\n\n    // Grow global arrays indefinitely\n    notificationQueue.push({ ... });\n    sessionData.push({ ... });\n  }, 5000);",
            "optimized_code": "function startPeriodicTasks() {\n  const MAX_QUEUE_SIZE = 100;\n  notificationInterval = setInterval(() => {\n    db.all(`SELECT id FROM users LIMIT 50`, (err, users) => {\n      const notifications = users.map(user => \n        generateLightNotifications(user.id)\n      );\n      broadcastNotificationsEfficiently(notifications);\n    });\n\n    // Limit queue size\n    if (notificationQueue.length > MAX_QUEUE_SIZE) {\n      notificationQueue.shift();\n    }\n    notificationQueue.push({ ... });\n  }, 30000); // Reduced frequency",
            "explanation": "Implement queue management, reduce task frequency, optimize notification generation",
            "expected_improvement": "40-50% reduction in background task overhead"
          }
        ],
        "immediate_actions": [
          "Implement queue size limits",
          "Reduce task frequency",
          "Optimize notification generation",
          "Add proper error handling"
        ],
        "long_term_solutions": [
          "Use dedicated job queuing system",
          "Implement more efficient background task management",
          "Add comprehensive monitoring for background tasks"
        ],
        "affected_metrics": [
          "cpu_utilization_avg_pct",
          "memory_usage_avg_mb"
        ],
        "priority_score": "P3",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce system background task overhead by 40-50%"
      }
    ],
    "summary": {
      "improved": 5,
      "worse": 26,
      "same": 0,
      "unknown": 3
    }
  },
  {
    "id": "1755922421206",
    "timestamp": "2025-08-23T04:13:41.206Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T04:12:57.136Z",
      "metrics": {
        "checks_rate": 0.952,
        "http_req_failed_rate": 0.015,
        "inp_avg_ms": 65,
        "inp_p95_ms": 90,
        "login_avg_ms": 850,
        "login_p95_ms": 1150,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "users_api_avg_ms": 320,
        "users_api_p95_ms": 480,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "memory_usage_avg_mb": 120,
        "cpu_utilization_avg_pct": 35,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "fcp_avg_ms": 1100,
        "fcp_p95_ms": 1400,
        "lcp_avg_ms": 1650,
        "lcp_p95_ms": 2100,
        "cls_avg": 0.035,
        "ttfb_avg_ms": 280,
        "ttfb_p95_ms": 450,
        "meeting_creation_avg_ms": 650,
        "calendar_navigation_avg_ms": 380,
        "resource_load_avg_ms": 420,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T04:12:21.893Z",
      "metrics": {
        "checks_rate": 0.496,
        "http_req_failed_rate": 0.085,
        "inp_avg_ms": 58,
        "inp_p95_ms": 80,
        "login_avg_ms": 4200,
        "login_p95_ms": 6200,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "users_api_avg_ms": 9200,
        "users_api_p95_ms": 14200,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "memory_usage_avg_mb": 285,
        "cpu_utilization_avg_pct": 85,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "fcp_avg_ms": 5200,
        "fcp_p95_ms": 7200,
        "lcp_avg_ms": 8900,
        "lcp_p95_ms": 12800,
        "cls_avg": 0.038,
        "ttfb_avg_ms": 1850,
        "ttfb_p95_ms": 2800,
        "meeting_creation_avg_ms": 6800,
        "calendar_navigation_avg_ms": 4500,
        "resource_load_avg_ms": 5200,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic API and Database Performance Degradation",
        "description": "Extreme performance collapse in API and database response times with up to 2858% increase in response latencies, indicating a systemic failure in backend infrastructure",
        "business_impact": "Potential 50-70% revenue loss, critical user experience breakdown, high risk of customer churn",
        "root_cause_analysis": "Likely causes include:\n- Unoptimized database queries\n- Memory leaks in Node.js application\n- Inefficient query indexing\n- Potential infrastructure resource constraints",
        "immediate_actions": [
          "Rollback recent deployment",
          "Implement emergency horizontal scaling",
          "Activate circuit breakers for affected services"
        ],
        "code_optimizations": [
          "Optimize database queries with proper indexing",
          "Implement connection pooling",
          "Add query timeout and limit mechanisms",
          "Refactor database access patterns"
        ],
        "long_term_solutions": [
          "Implement comprehensive performance monitoring",
          "Redesign database access layer",
          "Create performance testing pipeline"
        ],
        "affected_metrics": [
          "users_api_avg_ms",
          "users_api_p95_ms",
          "database_query_avg_ms",
          "database_query_p95_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-90% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory Leaks and Resource Exhaustion",
        "description": "Dramatic increase in memory usage from 120MB to 285MB and CPU utilization from 35% to 85%, indicating potential memory management issues",
        "business_impact": "System instability, potential service outages, increased infrastructure costs",
        "root_cause_analysis": "Potential memory leak scenarios:\n- Unmanaged JavaScript object references\n- Improper closure handling\n- Inefficient memory allocation in Node.js event loop",
        "immediate_actions": [
          "Capture heap snapshots",
          "Enable Node.js memory profiling",
          "Implement aggressive garbage collection monitoring"
        ],
        "code_optimizations": [
          "Use weak references for large objects",
          "Implement explicit memory cleanup in long-running processes",
          "Optimize event listener management"
        ],
        "long_term_solutions": [
          "Implement comprehensive memory profiling strategy",
          "Create memory usage baseline and alerting",
          "Develop memory leak detection unit tests"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-70% resource utilization reduction"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Rendering and Core Web Vitals Performance Degradation",
        "description": "Significant deterioration in First Contentful Paint (FCP) and Largest Contentful Paint (LCP), with increases from 1100ms to 5200ms and 1650ms to 8900ms respectively",
        "business_impact": "Potential 40-60% increase in bounce rates, negative SEO implications",
        "root_cause_analysis": "Likely frontend rendering bottlenecks:\n- Unoptimized React component rendering\n- Large JavaScript bundle sizes\n- Inefficient asset loading strategies",
        "immediate_actions": [
          "Enable code splitting",
          "Implement lazy loading for components",
          "Optimize critical rendering path"
        ],
        "code_optimizations": [
          "Use React.memo() for component memoization",
          "Implement efficient data fetching strategies",
          "Minimize unnecessary re-renders"
        ],
        "long_term_solutions": [
          "Implement performance budgets",
          "Create comprehensive frontend performance testing",
          "Develop modular, performance-conscious architecture"
        ],
        "affected_metrics": [
          "fcp_avg_ms",
          "fcp_p95_ms",
          "lcp_avg_ms",
          "lcp_p95_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-60% rendering performance improvement"
      }
    ],
    "summary": {
      "improved": 5,
      "worse": 26,
      "same": 0,
      "unknown": 3
    }
  },
  {
    "id": "1755922115418",
    "timestamp": "2025-08-23T04:08:35.418Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T04:06:16.796Z",
      "metrics": {
        "checks_rate": 0.952,
        "http_req_failed_rate": 0.015,
        "inp_avg_ms": 65,
        "inp_p95_ms": 90,
        "login_avg_ms": 850,
        "login_p95_ms": 1150,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "users_api_avg_ms": 320,
        "users_api_p95_ms": 480,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "memory_usage_avg_mb": 120,
        "cpu_utilization_avg_pct": 35,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "fcp_avg_ms": 1100,
        "fcp_p95_ms": 1400,
        "lcp_avg_ms": 1650,
        "lcp_p95_ms": 2100,
        "cls_avg": 0.035,
        "ttfb_avg_ms": 280,
        "ttfb_p95_ms": 450,
        "meeting_creation_avg_ms": 650,
        "calendar_navigation_avg_ms": 380,
        "resource_load_avg_ms": 420,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T04:07:12.760Z",
      "metrics": {
        "checks_rate": 0.496,
        "http_req_failed_rate": 0.085,
        "inp_avg_ms": 58,
        "inp_p95_ms": 80,
        "login_avg_ms": 4200,
        "login_p95_ms": 6200,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "users_api_avg_ms": 9200,
        "users_api_p95_ms": 14200,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "memory_usage_avg_mb": 285,
        "cpu_utilization_avg_pct": 85,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "fcp_avg_ms": 5200,
        "fcp_p95_ms": 7200,
        "lcp_avg_ms": 8900,
        "lcp_p95_ms": 12800,
        "cls_avg": 0.038,
        "ttfb_avg_ms": 1850,
        "ttfb_p95_ms": 2800,
        "meeting_creation_avg_ms": 6800,
        "calendar_navigation_avg_ms": 4500,
        "resource_load_avg_ms": 5200,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic API and Database Performance Degradation",
        "description": "Users API response times increased by 2775%, database queries by 177.8%, with critical impact on system responsiveness and user experience",
        "business_impact": "Potential revenue loss of 40-60% due to extreme latency, expected user churn rate > 50%, conversion rate drop",
        "root_cause_analysis": "Likely unoptimized database queries, potential N+1 query problem, inefficient ORM usage, missing database indexing",
        "immediate_actions": [
          "Implement emergency query caching",
          "Rollback recent database schema changes",
          "Activate read replicas for query distribution"
        ],
        "code_optimizations": [
          "Audit and rewrite complex database queries",
          "Add proper indexing on frequently accessed columns",
          "Implement query result pagination",
          "Use database query explain plans to identify bottlenecks"
        ],
        "long_term_solutions": [
          "Redesign data access layer",
          "Implement database sharding strategy",
          "Develop comprehensive query performance monitoring"
        ],
        "affected_metrics": [
          "users_api_avg_ms",
          "users_api_p95_ms",
          "database_query_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory Leaks and Resource Exhaustion",
        "description": "Memory usage increased 137.5%, CPU utilization spiked to 85%, indicating potential memory management issues",
        "business_impact": "Infrastructure cost increase, potential system instability, degraded user experience",
        "root_cause_analysis": "Probable memory leaks in Node.js application, inefficient garbage collection, unmanaged async operations",
        "immediate_actions": [
          "Trigger heap snapshot analysis",
          "Implement emergency memory limits",
          "Configure more aggressive garbage collection"
        ],
        "code_optimizations": [
          "Use weak references for event listeners",
          "Implement proper stream and resource cleanup",
          "Optimize large object handling",
          "Use memory profiling tools like heapdump"
        ],
        "long_term_solutions": [
          "Refactor memory-intensive components",
          "Implement comprehensive memory management strategy",
          "Develop automated memory leak detection"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-75% resource utilization reduction"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Rendering and Core Web Vitals Performance",
        "description": "Significant degradation in First Contentful Paint (FCP) and Largest Contentful Paint (LCP), increasing from ~1.1s to 5.2s",
        "business_impact": "SEO ranking drop, increased bounce rates, potential conversion rate reduction of 30-40%",
        "root_cause_analysis": "Likely oversized JavaScript bundles, unoptimized rendering, inefficient asset loading",
        "immediate_actions": [
          "Enable browser-level caching",
          "Implement critical CSS inlining",
          "Reduce initial JavaScript payload"
        ],
        "code_optimizations": [
          "Code-split React bundles",
          "Implement lazy loading for non-critical components",
          "Use React.memo and useMemo for rendering optimization",
          "Minimize third-party script usage"
        ],
        "long_term_solutions": [
          "Migrate to server-side rendering",
          "Implement progressive loading strategies",
          "Develop performance budget enforcement"
        ],
        "affected_metrics": [
          "fcp_avg_ms",
          "lcp_avg_ms",
          "ttfb_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-65% rendering performance improvement"
      }
    ],
    "summary": {
      "improved": 5,
      "worse": 26,
      "same": 0,
      "unknown": 3
    }
  },
  {
    "id": "1755920546258",
    "timestamp": "2025-08-23T03:42:26.258Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T03:41:38.391Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T03:40:58.199Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.95,
        "title": "N+1 Query Problem in Users API Endpoint",
        "description": "Inefficient database querying causing massive response time increases and resource consumption",
        "business_impact": "Up to 2858% increase in API response times, potential system overload and poor user experience",
        "root_cause_analysis": "Sequential database queries for each user's related data instead of using efficient joins",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.get('/api/users')",
              "users.forEach()"
            ],
            "lines": [
              320,
              330,
              350
            ],
            "issue": "Nested database queries creating exponential complexity"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "users.forEach((user, index) => {\n  db.all(`SELECT * FROM meetings WHERE created_by = ?`, [user.id], (err, meetings) => {\n    db.all(`SELECT * FROM calendar_events WHERE user_id = ?`, [user.id], (err, events) => {\n      // Nested queries\n    });\n  });\n});",
            "optimized_code": "const query = `\nSELECT \n  u.id, u.username, u.email,\n  m.id as meeting_id, m.title as meeting_title,\n  ce.id as event_id, ce.title as event_title\nFROM users u\nLEFT JOIN meetings m ON u.id = m.created_by\nLEFT JOIN calendar_events ce ON u.id = ce.user_id\n`;\ndb.all(query, (err, results) => {\n  const processedUsers = _.groupBy(results, 'id');\n});",
            "explanation": "Use a single JOIN query to fetch related data, reducing query complexity and network roundtrips",
            "expected_improvement": "90-95% reduction in query time and resource consumption"
          }
        ],
        "immediate_actions": [
          "Implement single-query data retrieval",
          "Add database indexing on foreign key columns",
          "Implement result set processing using groupBy"
        ],
        "long_term_solutions": [
          "Redesign data access layer",
          "Implement query optimization strategy",
          "Use database-level aggregation techniques"
        ],
        "affected_metrics": [
          "users api response avg ms",
          "users api response p95 ms",
          "users api response max ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Up to 97% reduction in API response times"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.92,
        "title": "Memory Leak in WebSocket Connections",
        "description": "Uncontrolled memory growth through persistent WebSocket connections and unbounded data storage",
        "business_impact": "Increasing memory consumption leading to potential application crash and performance degradation",
        "root_cause_analysis": "Missing connection cleanup and continuously growing global data structures",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "wss.on('connection')",
              "startPeriodicTasks()"
            ],
            "lines": [
              1200,
              1250,
              1300
            ],
            "issue": "No proper WebSocket connection management and memory cleanup"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "const activeConnections = new Map();\nwss.on('connection', (ws, req) => {\n  const connectionId = Date.now() + Math.random();\n  activeConnections.set(connectionId, {\n    ws,\n    messageHistory: [], // Grows indefinitely\n    largeData: new Array(10000).fill(0)\n  });\n  // No cleanup\n});",
            "optimized_code": "const MAX_CONNECTIONS = 1000;\nconst activeConnections = new Map();\nwss.on('connection', (ws, req) => {\n  const connectionId = Date.now() + Math.random();\n  if (activeConnections.size >= MAX_CONNECTIONS) {\n    const oldestConnection = activeConnections.keys().next().value;\n    activeConnections.delete(oldestConnection);\n  }\n  activeConnections.set(connectionId, {\n    ws,\n    messageHistory: [], // Limit array size\n    createdAt: Date.now()\n  });\n  \n  ws.on('close', () => {\n    activeConnections.delete(connectionId);\n  });\n});",
            "explanation": "Implement connection limit, automatic pruning, and proper cleanup on connection close",
            "expected_improvement": "80-90% reduction in memory consumption"
          }
        ],
        "immediate_actions": [
          "Implement connection management strategy",
          "Add size limits to data storage",
          "Create proper WebSocket connection lifecycle management"
        ],
        "long_term_solutions": [
          "Design scalable WebSocket connection architecture",
          "Implement connection pooling",
          "Add monitoring for active connections"
        ],
        "affected_metrics": [
          "memory usage avg mb",
          "memory usage max mb",
          "cpu utilization avg pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Up to 85% reduction in memory growth"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.88,
        "title": "Excessive Computation in Dashboard Rendering",
        "description": "Heavy computational logic executed during component rendering causing significant performance overhead",
        "business_impact": "Increased initial load times, poor frontend responsiveness, high CPU consumption",
        "root_cause_analysis": "Complex calculations performed synchronously during render without memoization",
        "affected_files": [
          {
            "path": "frontend/src/components/Dashboard.jsx",
            "functions": [
              "computeDashboardMetrics()",
              "renderMainContent()"
            ],
            "lines": [
              45,
              60,
              75
            ],
            "issue": "Expensive computations triggered on every render"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/components/Dashboard.jsx",
            "current_code": "const computeDashboardMetrics = () => {\n  const metrics = {};\n  for (let i = 0; i < 50000; i++) {\n    for (let j = 0; j < 50; j++) {\n      metrics[`metric_${i}_${j}`] = { ... };\n    }\n  }\n  return metrics;\n};",
            "optimized_code": "const computeDashboardMetrics = useMemo(() => {\n  const metrics = {};\n  for (let i = 0; i < 5000; i++) {\n    metrics[`metric_${i}`] = { \n      value: Math.random() * 1000,\n      trend: calculateTrend()\n    };\n  }\n  return metrics;\n}, [/* minimal dependencies */]);",
            "explanation": "Use useMemo to memoize expensive computations and reduce unnecessary recalculations",
            "expected_improvement": "70-80% reduction in rendering overhead"
          }
        ],
        "immediate_actions": [
          "Implement useMemo for complex computations",
          "Move heavy calculations to web workers",
          "Implement lazy loading of metrics"
        ],
        "long_term_solutions": [
          "Redesign state management approach",
          "Create performance-optimized rendering strategy",
          "Implement selective rendering techniques"
        ],
        "affected_metrics": [
          "test app fcp avg",
          "test app lcp avg",
          "dashboard load avg ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "60-75% improvement in initial render performance"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755920407005",
    "timestamp": "2025-08-23T03:40:07.005Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T03:39:31.055Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T03:38:52.509Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Massive Performance Degradation in User Authentication Flow",
        "description": "Login response times increased by 394-452%, indicating a severe bottleneck in authentication process",
        "business_impact": "Potential 50%+ user abandonment, estimated revenue loss of $50-100K per day",
        "root_cause_analysis": "Likely database connection pooling issue, inefficient authentication middleware, or unoptimized database queries",
        "immediate_actions": [
          "Implement connection pooling limits",
          "Add database query caching",
          "Temporarily increase authentication server resources"
        ],
        "code_optimizations": [
          "Optimize database query indexes for user lookup",
          "Implement connection timeout and retry mechanisms",
          "Use prepared statements to reduce query compilation overhead"
        ],
        "long_term_solutions": [
          "Redesign authentication microservice architecture",
          "Implement distributed caching layer",
          "Create dedicated read replicas for authentication queries"
        ],
        "affected_metrics": [
          "login_response_avg_ms",
          "login_response_p95_ms",
          "login_response_max_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Database Query Performance Collapse",
        "description": "Database query times increased by 177-229%, indicating systemic database performance issue",
        "business_impact": "Potential system-wide performance degradation, estimated $30-70K daily revenue risk",
        "root_cause_analysis": "Missing indexes, inefficient query patterns, potential connection pool exhaustion",
        "immediate_actions": [
          "Add missing database indexes",
          "Analyze and rewrite complex queries",
          "Increase database connection pool size"
        ],
        "code_optimizations": [
          "Use database query explain plans to identify bottlenecks",
          "Implement query result caching",
          "Break down complex joins into smaller, optimized queries"
        ],
        "long_term_solutions": [
          "Implement database sharding strategy",
          "Create read-only query replicas",
          "Redesign data access layer with ORM optimization"
        ],
        "affected_metrics": [
          "database_query_avg_ms",
          "database_query_p95_ms",
          "database_query_max_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-75% query performance enhancement"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Rendering and Core Web Vitals Degradation",
        "description": "First Contentful Paint (FCP) and Largest Contentful Paint (LCP) increased by 372-509%",
        "business_impact": "Potential 40% increase in bounce rates, SEO ranking drop",
        "root_cause_analysis": "Inefficient JavaScript bundle, unoptimized rendering, potential memory leaks",
        "immediate_actions": [
          "Enable code splitting",
          "Implement lazy loading for components",
          "Optimize initial render critical path"
        ],
        "code_optimizations": [
          "Reduce initial JavaScript bundle size",
          "Implement React.memo and useMemo for complex components",
          "Use server-side rendering for critical content"
        ],
        "long_term_solutions": [
          "Migrate to progressive rendering architecture",
          "Implement comprehensive performance monitoring",
          "Create performance budget for frontend deployments"
        ],
        "affected_metrics": [
          "test_app_fcp_avg",
          "test_app_lcp_avg",
          "test_app_ttfb_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-65% rendering performance improvement"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755918508410",
    "timestamp": "2025-08-23T03:08:28.410Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T03:07:24.763Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T03:06:48.222Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Eliminate Heavy Synchronous Database Operations",
        "description": "Multiple synchronous database operations causing significant performance bottlenecks",
        "business_impact": "Increased response times by 394-608%, potential system unresponsiveness and user frustration",
        "root_cause_analysis": "Synchronous database queries and massive data insertion without batching or connection pooling",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "initializeDatabase",
              "insertTestData"
            ],
            "lines": [
              135,
              175,
              210
            ],
            "issue": "Blocking synchronous database operations with massive data generation"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "db.serialize(() => {\n  // Synchronous table creation and data insertion\n  db.run(`CREATE TABLE...`);\n  insertTestData();\n});",
            "optimized_code": "async function initializeDatabaseAsync() {\n  await db.runAsync(`CREATE TABLE...`);\n  await insertTestDataBatched();\n}\n\nasync function insertTestDataBatched() {\n  const batchSize = 100;\n  for (let i = 0; i < users.length; i += batchSize) {\n    const batch = users.slice(i, i + batchSize);\n    await db.runAsync('INSERT INTO users', batch);\n  }\n}",
            "explanation": "Use async/await, implement batched insertions, and avoid blocking main thread",
            "expected_improvement": "70-85% reduction in database initialization time"
          }
        ],
        "immediate_actions": [
          "Implement connection pooling",
          "Use asynchronous database operations",
          "Batch large data insertions"
        ],
        "long_term_solutions": [
          "Redesign database initialization strategy",
          "Implement background data loading",
          "Use worker threads for heavy computations"
        ],
        "affected_metrics": [
          "login response avg ms",
          "dashboard load avg ms",
          "database query avg ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-75% performance improvement"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Prevent Memory Leaks in WebSocket Connections",
        "description": "Uncontrolled WebSocket connection management causing memory exhaustion",
        "business_impact": "Increased memory usage by 137.5%, potential server instability",
        "root_cause_analysis": "Storing connections without proper cleanup, accumulating large data structures",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "WebSocket connection handler"
            ],
            "lines": [
              1450,
              1475,
              1500
            ],
            "issue": "Unbounded WebSocket connection storage and message history"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "const activeConnections = new Map();\n\nwss.on('connection', (ws, req) => {\n  const connectionId = Date.now();\n  activeConnections.set(connectionId, {\n    ws,\n    messageHistory: [], // Grows indefinitely\n    largeData: new Array(10000).fill(0)\n  });\n})",
            "optimized_code": "const MAX_CONNECTIONS = 1000;\nconst MAX_MESSAGE_HISTORY = 100;\n\nfunction cleanupConnections() {\n  if (activeConnections.size > MAX_CONNECTIONS) {\n    const oldestConnection = Array.from(activeConnections.keys())[0];\n    activeConnections.delete(oldestConnection);\n  }\n}\n\nwss.on('connection', (ws, req) => {\n  cleanupConnections();\n  const connectionId = Date.now();\n  activeConnections.set(connectionId, {\n    ws,\n    messageHistory: [],\n    largeData: null // Avoid storing large data\n  });\n\n  ws.on('message', (message) => {\n    const connection = activeConnections.get(connectionId);\n    if (connection.messageHistory.length > MAX_MESSAGE_HISTORY) {\n      connection.messageHistory.shift(); // Remove oldest message\n    }\n    connection.messageHistory.push(message);\n  });\n})",
            "explanation": "Implement connection and message history size limits, prevent unbounded growth",
            "expected_improvement": "60-80% memory usage reduction"
          }
        ],
        "immediate_actions": [
          "Implement connection management limits",
          "Remove unnecessary large data storage",
          "Add connection cleanup mechanism"
        ],
        "long_term_solutions": [
          "Design stateless WebSocket communication",
          "Implement distributed connection management",
          "Use external session storage"
        ],
        "affected_metrics": [
          "memory usage avg mb",
          "memory usage max mb",
          "cpu utilization avg pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-75% memory efficiency"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.85,
        "title": "Optimize Frontend Render Performance",
        "description": "Excessive re-renders and heavy computations in React components",
        "business_impact": "Increased first contentful paint (FCP) by 372-439%, degraded user experience",
        "root_cause_analysis": "Unnecessary computations during render, lack of memoization, inefficient state management",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "computeExpensiveData",
              "renderMainContent"
            ],
            "lines": [
              250,
              300,
              350
            ],
            "issue": "Heavy computations executed on every render"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "const computeExpensiveData = () => {\n  // Heavy computation in render\n  let result = 0;\n  for (let i = 0; i < 100000; i++) {\n    for (let j = 0; j < 100; j++) {\n      result += Math.sin(i) * Math.cos(j);\n    }\n  }\n  return result;\n}",
            "optimized_code": "const computeExpensiveData = useMemo(() => {\n  console.log('Computing expensive data');\n  let result = 0;\n  for (let i = 0; i < 10000; i++) {\n    result += Math.sin(i);\n  }\n  return result;\n}, []); // Empty dependency array means compute only once",
            "explanation": "Use useMemo to memoize expensive computations, reduce unnecessary recalculations",
            "expected_improvement": "40-60% render performance improvement"
          }
        ],
        "immediate_actions": [
          "Implement useMemo for expensive computations",
          "Remove unnecessary re-render triggers",
          "Optimize state management"
        ],
        "long_term_solutions": [
          "Implement code splitting",
          "Use React.memo for components",
          "Design more efficient state update strategies"
        ],
        "affected_metrics": [
          "test app fcp avg",
          "test app lcp avg",
          "test app ttfb avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "40-55% frontend rendering performance"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.8,
        "title": "Eliminate N+1 Query Problems",
        "description": "Inefficient database querying causing exponential performance degradation",
        "business_impact": "Users API response times increased by 2775%, potential system overload",
        "root_cause_analysis": "Sequential database queries for each user, loading related data inefficiently",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.get('/api/users')"
            ],
            "lines": [
              380,
              425,
              470
            ],
            "issue": "Nested callbacks performing separate queries for each user"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "db.all(`SELECT * FROM users`, (err, users) => {\n  users.forEach((user) => {\n    db.all(`SELECT * FROM meetings WHERE user_id = ?`, [user.id]);\n    db.all(`SELECT * FROM events WHERE user_id = ?`, [user.id]);\n  });\n});",
            "optimized_code": "const getUsersWithRelatedData = async () => {\n  const users = await db.all(`\n    SELECT u.*, \n    json_group_array(json_object(\n      'id', m.id, \n      'title', m.title\n    )) as meetings,\n    json_group_array(json_object(\n      'id', e.id, \n      'title', e.title\n    )) as events\n    FROM users u\n    LEFT JOIN meetings m ON u.id = m.user_id\n    LEFT JOIN events e ON u.id = e.user_id\n    GROUP BY u.id\n  `);\n  return users;\n}",
            "explanation": "Use single SQL query with JSON aggregation to fetch related data, eliminate N+1 queries",
            "expected_improvement": "80-90% reduction in query execution time"
          }
        ],
        "immediate_actions": [
          "Refactor queries to use JOIN and aggregation",
          "Implement eager loading strategy",
          "Add appropriate database indexes"
        ],
        "long_term_solutions": [
          "Design database schema for efficient querying",
          "Implement query optimization layer",
          "Use database-level data transformation"
        ],
        "affected_metrics": [
          "users api response avg ms",
          "users api response p95 ms",
          "database query avg ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "70-85% API response time reduction"
      },
      {
        "type": "code_optimization",
        "severity": "medium",
        "confidence": 0.75,
        "title": "Implement Proper Event Listener and Resource Cleanup",
        "description": "Missing cleanup mechanisms causing potential memory leaks and performance degradation",
        "business_impact": "Gradual performance degradation, increased memory consumption",
        "root_cause_analysis": "Absence of proper cleanup functions in effects and event handlers",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "useEffect WebSocket connection"
            ],
            "lines": [
              280,
              310,
              340
            ],
            "issue": "WebSocket and resize event listeners without proper cleanup"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "useEffect(() => {\n  const handleResize = () => { \n    // Resize handling without debounce\n    setWindowSize({...});\n  };\n  window.addEventListener('resize', handleResize);\n  // Missing return cleanup function\n});",
            "optimized_code": "useEffect(() => {\n  const handleResize = _.debounce(() => {\n    const newSize = { width: window.innerWidth, height: window.innerHeight };\n    setWindowSize(newSize);\n  }, 200);\n\n  window.addEventListener('resize', handleResize);\n  return () => {\n    window.removeEventListener('resize', handleResize);\n    handleResize.cancel(); // Lodash debounce cleanup\n  };\n}, []);",
            "explanation": "Add debounce to resize handler, implement proper cleanup to prevent memory leaks",
            "expected_improvement": "30-50% reduction in unnecessary re-renders"
          }
        ],
        "immediate_actions": [
          "Add return cleanup functions to all effects",
          "Implement debounce for event handlers",
          "Remove global variable mutations"
        ],
        "long_term_solutions": [
          "Implement comprehensive cleanup strategy",
          "Use React hooks cleanup patterns",
          "Design stateless component architecture"
        ],
        "affected_metrics": [
          "cpu utilization avg pct",
          "memory usage avg mb",
          "checks success rate"
        ],
        "priority_score": "P3",
        "effort_estimate": "low",
        "expected_improvement": "20-35% performance stabilization"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755918350318",
    "timestamp": "2025-08-23T03:05:50.318Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T03:05:05.335Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T03:04:38.857Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic System Performance Collapse",
        "description": "Multiple critical metrics show 400-1000% performance degradation across login, dashboard, API, and core web vitals",
        "business_impact": "Potential 50-70% user abandonment, estimated $500K-$1M monthly revenue loss, severe SEO ranking drop",
        "root_cause_analysis": "Likely systemic architectural failure involving database queries, server resources, and application code",
        "immediate_actions": [
          "Rollback recent deployment",
          "Immediate infrastructure horizontal scaling",
          "Activate emergency performance monitoring"
        ],
        "code_optimizations": [
          "Optimize database query execution paths",
          "Implement aggressive query-level caching",
          "Review and refactor memory-intensive JavaScript functions"
        ],
        "long_term_solutions": [
          "Comprehensive performance architecture redesign",
          "Implement advanced caching strategies",
          "Migrate to more scalable cloud infrastructure"
        ],
        "affected_metrics": [
          "login_response_avg",
          "dashboard_load_avg",
          "users_api_response_avg",
          "test_app_fcp",
          "test_app_lcp"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% performance recovery"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Database Query Performance Bottleneck",
        "description": "Database queries showing 177-220% latency increase with significant resource consumption",
        "business_impact": "Potential transaction failures, increased infrastructure costs, degraded user experience",
        "root_cause_analysis": "Inefficient query patterns, lack of proper indexing, potential N+1 query problems",
        "immediate_actions": [
          "Analyze and optimize slow query logs",
          "Add missing database indexes",
          "Implement query result caching"
        ],
        "code_optimizations": [
          "Use database query profiling tools",
          "Implement pagination for large result sets",
          "Replace complex joins with optimized subqueries"
        ],
        "long_term_solutions": [
          "Database schema optimization",
          "Implement read replicas",
          "Consider NoSQL/distributed caching solutions"
        ],
        "affected_metrics": [
          "database_query_avg",
          "database_query_p95",
          "users_api_response_avg"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-75% query performance improvement"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Memory Utilization and Resource Management",
        "description": "Critical memory usage increase of 130-137% with high CPU utilization",
        "business_impact": "Increased infrastructure costs, potential service instability",
        "root_cause_analysis": "Memory leaks, inefficient resource allocation, unoptimized JavaScript runtime",
        "immediate_actions": [
          "Implement memory profiling",
          "Configure aggressive garbage collection",
          "Add memory usage alerts"
        ],
        "code_optimizations": [
          "Detect and fix memory leaks in long-running processes",
          "Optimize object creation and destruction patterns",
          "Implement stream processing for large data transformations"
        ],
        "long_term_solutions": [
          "Adopt more memory-efficient data structures",
          "Implement worker thread/microservice architecture",
          "Regular performance and memory audits"
        ],
        "affected_metrics": [
          "memory_usage_avg",
          "cpu_utilization_avg",
          "js_heap_size_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "40-55% resource efficiency"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755917563882",
    "timestamp": "2025-08-23T02:52:43.882Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T02:51:58.532Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T02:51:17.794Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Massive Database Query N+1 Problem in User Endpoint",
        "description": "The /api/users endpoint performs sequential database queries for each user, causing exponential query complexity and severe performance degradation",
        "business_impact": "Potential 2775% increase in API response times, risking user experience and system scalability",
        "root_cause_analysis": "Nested database queries fetching meetings, events, and notifications for each user individually",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.get('/api/users')",
              "computeUserStats",
              "generateSocialGraph"
            ],
            "lines": [
              350,
              375,
              400
            ],
            "issue": "Sequential database queries with heavy post-processing"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "users.forEach((user, index) => {\n  db.all(`SELECT * FROM meetings WHERE created_by = ?`, [user.id], (err, meetings) => {\n    // Nested queries\n  });\n});",
            "optimized_code": "const userIds = users.map(user => user.id);\nconst meetingsQuery = `SELECT * FROM meetings WHERE created_by IN (?)` \ndb.all(meetingsQuery, [userIds], (err, meetings) => {\n  const meetingsByUser = _.groupBy(meetings, 'created_by');\n  const processedUsers = users.map(user => ({\n    ...user,\n    meetings: meetingsByUser[user.id] || []\n  }));\n});",
            "explanation": "Use a single query with IN clause and client-side grouping to reduce database round trips",
            "expected_improvement": "Up to 90% reduction in query time"
          }
        ],
        "immediate_actions": [
          "Implement batch database querying",
          "Add database indexing on user_id columns",
          "Limit result set sizes"
        ],
        "long_term_solutions": [
          "Implement database-level aggregation",
          "Use caching mechanisms",
          "Redesign API to support pagination and selective data loading"
        ],
        "affected_metrics": [
          "users api response avg ms",
          "users api response p95 ms",
          "users api response max ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Reduce API response times by 75-90%"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Memory Leaks and Global State Management",
        "description": "Uncontrolled global variables and memory-intensive data structures causing excessive memory consumption",
        "business_impact": "137.5% increase in memory usage, potential system instability and resource exhaustion",
        "root_cause_analysis": "Global arrays and variables storing large datasets without proper cleanup",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "login",
              "loadAllUserData",
              "generateUserAnalytics"
            ],
            "lines": [
              250,
              300,
              350
            ],
            "issue": "Accumulating global state without memory management"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "userSessions.push({\n  user,\n  loginTime: new Date(),\n  sessionData: new Array(1000).fill(0).map((_, i) => ({\n    id: i, \n    data: 'Session data '.repeat(100)\n  }))\n});",
            "optimized_code": "const MAX_SESSION_HISTORY = 10;\nif (userSessions.length >= MAX_SESSION_HISTORY) {\n  userSessions.shift(); // Remove oldest session\n}\nuserSessions.push(sessionData);",
            "explanation": "Implement size-limited storage and periodic cleanup for session data",
            "expected_improvement": "Reduce memory consumption by 60-80%"
          }
        ],
        "immediate_actions": [
          "Implement memory cleanup mechanisms",
          "Use WeakMap/WeakSet for temporary data",
          "Add explicit memory release strategies"
        ],
        "long_term_solutions": [
          "Implement proper state management with Redux or similar",
          "Use immutable data structures",
          "Add periodic garbage collection"
        ],
        "affected_metrics": [
          "memory usage avg mb",
          "memory usage max mb",
          "js heap size avg mb"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Reduce memory consumption by 70-90%"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Inefficient WebSocket Connection and Notification Handling",
        "description": "Heavy real-time processing and unmanaged WebSocket connections causing significant performance overhead",
        "business_impact": "Potential system resource exhaustion and increased server load",
        "root_cause_analysis": "Generating massive notification payloads and storing unbounded connection data",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "startPeriodicTasks",
              "generateHeavyNotifications"
            ],
            "lines": [
              1200,
              1250
            ],
            "issue": "Generating large notifications for all users every 5 seconds"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "const MAX_NOTIFICATIONS_PER_USER = 50;\nfunction generateHeavyNotifications(userId) {\n  const notifications = [];\n  for (let i = 0; i < 50; i++) {\n    notifications.push({ ... massive notification object ... });\n  }\n  return notifications;\n}",
            "optimized_code": "const MAX_NOTIFICATIONS_PER_USER = 10;\nfunction generateLightNotifications(userId) {\n  return new Array(MAX_NOTIFICATIONS_PER_USER).fill(0).map((_, i) => ({\n    id: Date.now() + i,\n    type: ['meeting', 'reminder'][i % 2],\n    title: `Notification ${i}`,\n    priority: Math.floor(Math.random() * 3) + 1\n  }));\n}",
            "explanation": "Reduce notification payload size and complexity",
            "expected_improvement": "Reduce WebSocket message size by 70-80%"
          }
        ],
        "immediate_actions": [
          "Implement notification size limits",
          "Add WebSocket connection lifecycle management",
          "Reduce periodic task frequency"
        ],
        "long_term_solutions": [
          "Implement event-driven notification system",
          "Use message queues for notification processing",
          "Add client-side notification rendering optimization"
        ],
        "affected_metrics": [
          "websocket connection avg ms",
          "notification processing avg ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce WebSocket overhead by 50-70%"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755916385198",
    "timestamp": "2025-08-23T02:33:05.198Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T02:32:36.727Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T02:31:55.886Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic System-Wide Performance Collapse",
        "description": "Comprehensive performance degradation across multiple system components with extreme latency increases and failure rates",
        "business_impact": "Potential revenue loss of 60-75%, massive user experience disruption, potential customer churn",
        "root_cause_analysis": "Likely combination of database query inefficiencies, memory leaks, and potential infrastructure scaling limitations",
        "immediate_actions": [
          "Immediately rollback recent deployments",
          "Activate emergency horizontal scaling",
          "Implement circuit breakers for critical API endpoints"
        ],
        "code_optimizations": [
          "Optimize database query indexing and connection pooling",
          "Implement aggressive query timeout mechanisms",
          "Review and refactor memory-intensive JavaScript functions"
        ],
        "long_term_solutions": [
          "Comprehensive performance architecture review",
          "Implement advanced caching strategies",
          "Develop robust performance testing framework"
        ],
        "affected_metrics": [
          "login_response_time",
          "dashboard_load_time",
          "users_api_response",
          "error_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% performance restoration"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.87,
        "title": "Database Query Performance Degradation",
        "description": "Database query times increased by 177.8% with significant latency across query operations",
        "business_impact": "Potential transaction failures, increased infrastructure costs, poor user experience",
        "root_cause_analysis": "Likely missing database indexes, inefficient query patterns, potential connection pool exhaustion",
        "immediate_actions": [
          "Analyze and optimize database query execution plans",
          "Add missing indexes on frequently accessed columns",
          "Implement query result caching"
        ],
        "code_optimizations": [
          "Use database query explain plans to identify bottlenecks",
          "Implement prepared statement caching",
          "Optimize ORM query generation"
        ],
        "long_term_solutions": [
          "Implement database sharding strategy",
          "Develop automated database performance monitoring",
          "Create query performance regression test suite"
        ],
        "affected_metrics": [
          "database_query_avg_ms",
          "database_query_p95_ms",
          "users_api_response_time"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-75% query performance improvement"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Rendering and Core Web Vitals Optimization",
        "description": "Significant degradation in First Contentful Paint (FCP) and Largest Contentful Paint (LCP)",
        "business_impact": "Potential SEO ranking drop, increased bounce rates, poor user perception",
        "root_cause_analysis": "Possible large bundle sizes, inefficient rendering, unoptimized asset loading",
        "immediate_actions": [
          "Implement code splitting",
          "Enable lazy loading for non-critical resources",
          "Optimize frontend bundle size"
        ],
        "code_optimizations": [
          "Use React.lazy() for component loading",
          "Implement server-side rendering",
          "Minimize critical rendering path"
        ],
        "long_term_solutions": [
          "Develop performance budget for frontend",
          "Implement comprehensive performance monitoring",
          "Create automated performance regression testing"
        ],
        "affected_metrics": [
          "test_app_fcp_avg",
          "test_app_lcp_avg",
          "test_app_ttfb_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-65% rendering performance improvement"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755916293099",
    "timestamp": "2025-08-23T02:31:33.099Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T02:30:30.060Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T02:29:49.441Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Massive Database Query N+1 Problem in User API",
        "description": "The /api/users endpoint performs inefficient queries with nested database calls, causing exponential query complexity and severe performance degradation",
        "business_impact": "Up to 2775% increase in API response times, potential system overload, and poor user experience",
        "root_cause_analysis": "Nested database queries for each user's meetings, events, and notifications",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.get('/api/users')",
              "generateSocialGraph"
            ],
            "lines": [
              450,
              480,
              520
            ],
            "issue": "Sequential database queries for each user"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "users.forEach((user, index) => {\n  db.all(`SELECT * FROM meetings WHERE created_by = ?`, [user.id], (err, meetings) => {\n    // Nested queries for each user\n  });\n})",
            "optimized_code": "const userIds = users.map(user => user.id);\nconst meetingsQuery = `\n  SELECT created_by, * FROM meetings \n  WHERE created_by IN (${userIds.join(',')})\n`;\ndb.all(meetingsQuery, (err, allMeetings) => {\n  const meetingsByUser = _.groupBy(allMeetings, 'created_by');\n  // Process users with pre-grouped meetings\n})",
            "explanation": "Replace N+1 queries with a single JOIN query, dramatically reducing database round trips",
            "expected_improvement": "Up to 90% reduction in query time and resource consumption"
          }
        ],
        "immediate_actions": [
          "Implement bulk query with JOIN",
          "Add database indexing on user_id columns",
          "Implement connection pooling"
        ],
        "long_term_solutions": [
          "Redesign API to use efficient data fetching patterns",
          "Implement data pagination and lazy loading",
          "Consider GraphQL for more flexible data retrieval"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "users_api_response_p95_ms",
          "database_query_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "85-95% response time reduction"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Memory Leaks in WebSocket and Global State Management",
        "description": "Uncontrolled memory growth through global variables and unclosed WebSocket connections",
        "business_impact": "Potential server memory exhaustion, increased infrastructure costs, possible system crashes",
        "root_cause_analysis": "Accumulation of large data structures in global arrays without proper cleanup",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "wss.on('connection')",
              "startPeriodicTasks"
            ],
            "lines": [
              1200,
              1250,
              1300
            ],
            "issue": "Memory growth through unchecked global arrays and WebSocket connections"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "const activeConnections = new Map();\nwss.on('connection', (ws, req) => {\n  const connectionId = Date.now() + Math.random();\n  activeConnections.set(connectionId, { ws, messageHistory: [] });\n  // No connection limit or cleanup\n})",
            "optimized_code": "const MAX_CONNECTIONS = 1000;\nconst activeConnections = new Map();\nwss.on('connection', (ws, req) => {\n  if (activeConnections.size >= MAX_CONNECTIONS) {\n    ws.close();\n    return;\n  }\n  const connectionId = Date.now() + Math.random();\n  activeConnections.set(connectionId, { \n    ws, \n    messageHistory: [],\n    createdAt: Date.now()\n  });\n  \n  // Periodic cleanup\n  if (activeConnections.size % 100 === 0) {\n    cleanupOldConnections();\n  }\n})\n\nfunction cleanupOldConnections() {\n  const now = Date.now();\n  for (let [id, connection] of activeConnections) {\n    if (now - connection.createdAt > 3600000) { // 1 hour\n      connection.ws.close();\n      activeConnections.delete(id);\n    }\n  }\n}",
            "explanation": "Implement connection limiting, periodic cleanup, and explicit closure to prevent memory leaks",
            "expected_improvement": "Reduce memory usage by 70-80%, prevent potential memory exhaustion"
          }
        ],
        "immediate_actions": [
          "Implement WebSocket connection limits",
          "Add periodic connection cleanup",
          "Set maximum message history size"
        ],
        "long_term_solutions": [
          "Implement robust connection management strategy",
          "Use memory-aware WebSocket library",
          "Create sophisticated connection lifecycle management"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "memory_usage_p95_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% memory usage reduction"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.85,
        "title": "Heavy Computational Overhead in Dashboard Component",
        "description": "Excessive computational complexity during dashboard rendering and data processing",
        "business_impact": "Increased frontend load time, poor user experience, high client-side resource consumption",
        "root_cause_analysis": "Performing heavy computations during component render without memoization",
        "affected_files": [
          {
            "path": "frontend/src/components/Dashboard.jsx",
            "functions": [
              "computeDashboardMetrics",
              "generateChartData"
            ],
            "lines": [
              50,
              100,
              250
            ],
            "issue": "Complex calculations performed on every render"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/components/Dashboard.jsx",
            "current_code": "const computeDashboardMetrics = () => {\n  const metrics = {};\n  for (let i = 0; i < 50000; i++) {\n    for (let j = 0; j < 50; j++) {\n      metrics[`metric_${i}_${j}`] = { ... };\n    }\n  }\n  return metrics;\n};\n\n// Computed on every render\nconst expensiveMetrics = computeDashboardMetrics();",
            "optimized_code": "const computeDashboardMetrics = useMemo(() => {\n  const metrics = {};\n  for (let i = 0; i < 5000; i++) {\n    metrics[`metric_${i}`] = { \n      value: Math.random() * 1000,\n      trend: calculateTrend()\n    };\n  }\n  return metrics;\n}, [/* minimal dependencies */]);\n\n// Memoized computation\nconst expensiveMetrics = computeDashboardMetrics;",
            "explanation": "Use useMemo to cache expensive computations and reduce unnecessary recalculations",
            "expected_improvement": "50-70% reduction in render time and computational overhead"
          }
        ],
        "immediate_actions": [
          "Wrap heavy computations with useMemo",
          "Implement lazy loading for dashboard data",
          "Reduce computational complexity"
        ],
        "long_term_solutions": [
          "Implement data virtualization",
          "Move heavy computations to web workers",
          "Create server-side pre-computation strategies"
        ],
        "affected_metrics": [
          "dashboard_load_avg_ms",
          "dashboard_load_p95_ms",
          "test_app_inp_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-65% render performance improvement"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.8,
        "title": "Inefficient Login Validation and Authentication",
        "description": "Complex and computationally expensive login process with unnecessary security checks",
        "business_impact": "Slow login experience, high server load during authentication",
        "root_cause_analysis": "Synchronous, heavy computational validation during login process",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "login",
              "LoginForm.validateForm"
            ],
            "lines": [
              350,
              400,
              450
            ],
            "issue": "Extensive validation and computation during login"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "const validateForm = (username, password) => {\n  const errors = {};\n  // 1000 iterations of validation\n  for (let i = 0; i < 1000; i++) {\n    const rule = validationRules[i % validationRules.length];\n    if (!rule.test(username, password)) {\n      errors[`rule_${i}`] = rule.message;\n    }\n  }\n  return Object.keys(errors).length === 0;\n}",
            "optimized_code": "const validateForm = useCallback((username, password) => {\n  const errors = {};\n  const basicValidations = [\n    { test: u => u.length >= 3, message: \"Username too short\" },\n    { test: p => p.length >= 8, message: \"Password too short\" }\n  ];\n  \n  for (let validation of basicValidations) {\n    if (!validation.test(username) || !validation.test(password)) {\n      errors[validation.message] = true;\n    }\n  }\n  \n  return { isValid: Object.keys(errors).length === 0, errors };\n}, [])",
            "explanation": "Simplify validation logic, reduce computational complexity, use efficient validation strategies",
            "expected_improvement": "60-80% reduction in login validation time"
          }
        ],
        "immediate_actions": [
          "Simplify validation logic",
          "Implement client-side basic validation",
          "Move complex validations to server-side"
        ],
        "long_term_solutions": [
          "Create modular, efficient validation framework",
          "Implement progressive validation",
          "Use lightweight validation libraries"
        ],
        "affected_metrics": [
          "login_response_avg_ms",
          "login_response_p95_ms",
          "test_app_inp_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-70% login performance improvement"
      },
      {
        "type": "code_optimization",
        "severity": "medium",
        "confidence": 0.75,
        "title": "Unnecessary Re-renders and State Management Overhead",
        "description": "Excessive state variables and inefficient React rendering patterns",
        "business_impact": "Increased frontend rendering time, poor application responsiveness",
        "root_cause_analysis": "Multiple state variables with broad dependencies causing unnecessary re-renders",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "App component"
            ],
            "lines": [
              50,
              100,
              150
            ],
            "issue": "Too many independent state variables with complex interdependencies"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "const [user, setUser] = useState(null);\nconst [users, setUsers] = useState([]);\nconst [meetings, setMeetings] = useState([]);\nconst [resources, setResources] = useState([]);\nconst [notifications, setNotifications] = useState([]);\n// Multiple independent state updates",
            "optimized_code": "const [appState, setAppState] = useState({\n  user: null,\n  users: [],\n  meetings: [],\n  resources: [],\n  notifications: []\n});\n\n// Centralized, efficient state update\nconst updateAppState = useCallback((updates) => {\n  setAppState(prev => ({\n    ...prev,\n    ...updates\n  }));\n}, []);",
            "explanation": "Consolidate state management, reduce re-render complexity, improve performance through centralized updates",
            "expected_improvement": "40-60% reduction in unnecessary re-renders"
          }
        ],
        "immediate_actions": [
          "Consolidate state management",
          "Use useReducer for complex state",
          "Implement selective rendering strategies"
        ],
        "long_term_solutions": [
          "Consider state management libraries like Redux or Zustand",
          "Implement React.memo and useMemo strategically",
          "Create performance-oriented component architecture"
        ],
        "affected_metrics": [
          "test_app_inp_avg",
          "test_app_inp_p95",
          "test_app_cls_avg"
        ],
        "priority_score": "P3",
        "effort_estimate": "medium",
        "expected_improvement": "40-55% render performance improvement"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755915806509",
    "timestamp": "2025-08-23T02:23:26.509Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T02:22:38.234Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T02:21:58.293Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "N+1 Query and Massive Data Loading Performance Bottleneck",
        "description": "Multiple API endpoints and data fetching strategies cause extreme performance degradation through inefficient database querying and excessive data processing",
        "business_impact": "Potential 50-75% user experience degradation, increased infrastructure costs, potential user churn",
        "root_cause_analysis": "Synchronous, unoptimized database queries with heavy data processing in multiple components",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "loadAllUserData",
              "getUsersWithMeetings",
              "createMeetingWithValidation"
            ],
            "lines": [
              350,
              400,
              550
            ],
            "issue": "N+1 query problem with nested database calls and heavy processing"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "users.forEach((user) => {\n  db.all(`SELECT * FROM meetings WHERE created_by = ?`, [user.id], (err, meetings) => {\n    // Nested query for each user\n  });\n});",
            "optimized_code": "const userQuery = `\nSELECT u.*, \n  json_group_array(\n    json_object(\n      'id', m.id, \n      'title', m.title\n    )\n  ) as meetings \nFROM users u\nLEFT JOIN meetings m ON u.id = m.created_by\nGROUP BY u.id\nLIMIT 100`;\n\ndb.all(userQuery, (err, usersWithMeetings) => { });",
            "explanation": "Use single JOIN query with JSON aggregation to eliminate N+1 problem",
            "expected_improvement": "90-95% reduction in query time and memory consumption"
          }
        ],
        "immediate_actions": [
          "Implement database-side JOIN and aggregation",
          "Add proper indexing on foreign key columns",
          "Implement server-side result pagination"
        ],
        "long_term_solutions": [
          "Redesign data fetching architecture",
          "Implement GraphQL for precise data loading",
          "Create dedicated view/materialized views for complex queries"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "database_query_avg_ms",
          "memory_usage_avg_mb"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-75% performance gain"
      },
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Memory Leak and Unbounded Global State Accumulation",
        "description": "Global variables and caches continuously grow without proper cleanup, causing memory exhaustion",
        "business_impact": "Potential application crash, memory overflow, increased infrastructure costs",
        "root_cause_analysis": "Unconstrained global arrays and objects storing computational results",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "login",
              "loadAllUserData",
              "loadSystemData"
            ],
            "lines": [
              250,
              300,
              400
            ],
            "issue": "Unbounded global variable growth"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "userSessions.push({\n  user,\n  loginTime: new Date(),\n  metrics: loginMetrics,\n  sessionData: new Array(1000).fill(0).map((_, i) => ({\n    id: i, \n    data: 'Session data '.repeat(100) \n  }))\n});",
            "optimized_code": "const MAX_SESSION_HISTORY = 100;\nif (userSessions.length >= MAX_SESSION_HISTORY) {\n  userSessions.shift(); // Remove oldest session\n}\nuserSessions.push(sessionData);",
            "explanation": "Implement size-limited storage to prevent unbounded memory growth",
            "expected_improvement": "Prevent memory leaks, reduce memory consumption by 70-80%"
          }
        ],
        "immediate_actions": [
          "Implement size limits for global variables",
          "Add periodic cleanup mechanisms",
          "Use WeakMap/WeakSet for transient data"
        ],
        "long_term_solutions": [
          "Implement proper state management",
          "Use React context with controlled lifecycle",
          "Develop custom hook for managing complex state"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "memory_usage_max_mb",
          "js_heap_size_avg_mb"
        ],
        "priority_score": "P1",
        "effort_estimate": "medium",
        "expected_improvement": "60-70% memory usage reduction"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.85,
        "title": "Inefficient Heavy Computations in Render Cycle",
        "description": "Multiple components perform expensive computations during render, causing significant performance overhead",
        "business_impact": "Slow initial page load, increased CPU usage, poor user experience",
        "root_cause_analysis": "Computational logic executed synchronously in render methods without memoization",
        "affected_files": [
          {
            "path": "frontend/src/components/Dashboard.jsx",
            "functions": [
              "computeDashboardMetrics",
              "generateChartData"
            ],
            "lines": [
              100,
              350
            ],
            "issue": "Expensive computations in render without memoization"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/components/Dashboard.jsx",
            "current_code": "const computeDashboardMetrics = () => {\n  const metrics = {};\n  for (let i = 0; i < 50000; i++) {\n    for (let j = 0; j < 50; j++) {\n      metrics[`metric_${i}_${j}`] = {...};\n    }\n  }\n  return metrics;\n};",
            "optimized_code": "const computeDashboardMetrics = useMemo(() => {\n  const metrics = {};\n  for (let i = 0; i < 5000; i++) {\n    metrics[`metric_${i}`] = computeMetric(i);\n  }\n  return metrics;\n}, [/* minimal dependencies */]);",
            "explanation": "Use useMemo to memoize expensive computations, reduce scope and complexity",
            "expected_improvement": "50-60% render performance improvement"
          }
        ],
        "immediate_actions": [
          "Implement useMemo for heavy computations",
          "Move complex calculations to Web Workers",
          "Implement lazy loading strategies"
        ],
        "long_term_solutions": [
          "Redesign component rendering strategy",
          "Implement code splitting",
          "Use performance profiling tools"
        ],
        "affected_metrics": [
          "dashboard_load_avg_ms",
          "cpu_utilization_avg_pct",
          "test_app_inp_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "40-50% rendering performance gain"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755915666725",
    "timestamp": "2025-08-23T02:21:06.725Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-23T02:20:36.962Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-23T02:20:13.284Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic System Performance Collapse",
        "description": "Multiple critical performance metrics show severe degradation, with error rates increasing by 4900% and page load times escalating by 903.6%",
        "business_impact": "Estimated 60-80% potential revenue loss, critical user experience disruption, potential customer churn",
        "root_cause_analysis": "Potential combination of code deployment issues, database query bottlenecks, and infrastructure scaling problems",
        "immediate_actions": [
          "Immediate rollback to previous stable deployment",
          "Activate emergency horizontal scaling",
          "Implement circuit breaker for failing requests"
        ],
        "code_optimizations": [
          "Optimize database query indexing",
          "Implement aggressive caching strategies",
          "Review and refactor memory-intensive JavaScript functions"
        ],
        "long_term_solutions": [
          "Comprehensive performance audit",
          "Implement advanced monitoring and auto-scaling",
          "Develop robust performance testing pipeline"
        ],
        "affected_metrics": [
          "error_rate",
          "page_load_avg_ms",
          "http_req_failed_rate",
          "successful_requests_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-90% performance recovery"
      },
      {
        "type": "root_cause",
        "severity": "high",
        "confidence": 0.85,
        "title": "Database and Network Latency Bottlenecks",
        "description": "Significant increases in TTFB (222.9%) and HTTP request latencies (561.9%)",
        "business_impact": "Potential 40-50% conversion rate reduction, increased operational costs",
        "root_cause_analysis": "Likely unoptimized database queries, insufficient connection pooling, potential network infrastructure limitations",
        "immediate_actions": [
          "Analyze and optimize slow database queries",
          "Implement connection pooling",
          "Review network configuration and CDN settings"
        ],
        "code_optimizations": [
          "Add database query performance monitoring",
          "Implement query result caching",
          "Optimize database indexes"
        ],
        "long_term_solutions": [
          "Migrate to more performant database infrastructure",
          "Implement advanced caching layer",
          "Develop comprehensive query optimization strategy"
        ],
        "affected_metrics": [
          "ttfb_avg_ms",
          "http_req_avg_ms",
          "http_req_p95_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "high",
        "expected_improvement": "50-70% latency reduction"
      },
      {
        "type": "optimization",
        "severity": "medium",
        "confidence": 0.75,
        "title": "Frontend Rendering and Core Web Vitals Optimization",
        "description": "Significant degradation in First Contentful Paint (301.2%) and Largest Contentful Paint (211.0%)",
        "business_impact": "SEO ranking decline, increased bounce rates, reduced user engagement",
        "root_cause_analysis": "Potential frontend bundle bloat, inefficient rendering strategies, unoptimized asset loading",
        "immediate_actions": [
          "Implement code splitting",
          "Optimize asset loading strategies",
          "Enable lazy loading for non-critical resources"
        ],
        "code_optimizations": [
          "Reduce JavaScript bundle size",
          "Implement efficient React rendering patterns",
          "Use performance-optimized image formats"
        ],
        "long_term_solutions": [
          "Adopt modern performance-first frontend architecture",
          "Implement comprehensive frontend performance monitoring",
          "Develop automated performance testing"
        ],
        "affected_metrics": [
          "fcp_avg_ms",
          "lcp_avg_ms",
          "cls_avg"
        ],
        "priority_score": "P3",
        "effort_estimate": "medium",
        "expected_improvement": "40-60% rendering performance improvement"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755914750745",
    "timestamp": "2025-08-23T02:05:50.745Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T02:05:01.963Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T02:04:24.952Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "parsing_issue",
        "severity": "medium",
        "confidence": 0.6,
        "title": "AI Analysis Generated (Display Issue)",
        "description": "AI provided detailed performance analysis. The response format needs adjustment for optimal display. Full analysis available in backend logs.",
        "actionable_steps": [
          "Check backend console for complete AI analysis",
          "Review metrics degradation patterns",
          "Focus on critical performance issues mentioned in logs"
        ],
        "affected_metrics": [
          "memory_usage"
        ],
        "business_impact": "Performance insights available - check logs for detailed recommendations",
        "priority_score": "P3",
        "effort_estimate": "low",
        "raw_analysis_available": true
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755914603901",
    "timestamp": "2025-08-23T02:03:23.901Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T02:02:47.291Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T02:02:08.148Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic API Response Time Degradation",
        "description": "Users API response times increased by 2775%, with average response time jumping from 320ms to 9200ms, indicating severe system-wide performance collapse",
        "business_impact": "Potential 50-70% user session abandonment, estimated revenue loss of $50-100K per day",
        "root_cause_analysis": "Likely caused by unoptimized database queries, inefficient ORM mappings, or connection pool exhaustion in Node.js backend",
        "immediate_actions": [
          "Implement emergency connection pooling",
          "Add circuit breakers to prevent cascading failures",
          "Temporarily scale infrastructure horizontally"
        ],
        "code_optimizations": [
          "Optimize database query indexing",
          "Implement query result caching",
          "Review and refactor complex database joins"
        ],
        "long_term_solutions": [
          "Redesign data access layer",
          "Implement advanced caching strategies",
          "Migrate to more performant database architecture"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "users_api_response_p95_ms",
          "database_query_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory Resource Exhaustion",
        "description": "Memory usage increased 137.5% from 120MB to 285MB, indicating potential memory leaks or inefficient resource management",
        "business_impact": "System instability, potential service interruptions, increased infrastructure costs",
        "root_cause_analysis": "Likely JavaScript memory leaks in Node.js application, possibly from improper object references or unmanaged event listeners",
        "immediate_actions": [
          "Enable Node.js heap memory profiling",
          "Implement aggressive garbage collection",
          "Restart services with memory limits"
        ],
        "code_optimizations": [
          "Use WeakMap/WeakSet for ephemeral references",
          "Remove stale event listeners",
          "Implement manual memory cleanup in long-running processes"
        ],
        "long_term_solutions": [
          "Comprehensive memory leak audit",
          "Implement advanced memory management patterns",
          "Use memory-efficient data structures"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "memory_usage_max_mb",
          "js_heap_size_avg_mb"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-60% memory usage reduction"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Rendering Performance Collapse",
        "description": "First Contentful Paint (FCP) increased 372.7% from 1100ms to 5200ms, indicating critical frontend rendering bottlenecks",
        "business_impact": "High user bounce rates, potential 40-50% conversion rate reduction",
        "root_cause_analysis": "Likely caused by large JavaScript bundles, unoptimized rendering, inefficient component lifecycle management",
        "immediate_actions": [
          "Enable code splitting",
          "Implement lazy loading for components",
          "Minimize critical rendering path"
        ],
        "code_optimizations": [
          "Use React.memo and useMemo for component memoization",
          "Optimize JavaScript bundle size",
          "Implement server-side rendering fallback"
        ],
        "long_term_solutions": [
          "Migrate to more performant framework/rendering strategy",
          "Implement progressive loading techniques",
          "Advanced performance monitoring"
        ],
        "affected_metrics": [
          "test_app_fcp_avg",
          "test_app_lcp_avg",
          "test_app_ttfb_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "60-70% rendering performance improvement"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755914000161",
    "timestamp": "2025-08-23T01:53:20.161Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:52:19.112Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:51:40.916Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "parsing_issue",
        "severity": "medium",
        "confidence": 0.6,
        "title": "AI Analysis Generated (Display Issue)",
        "description": "AI provided detailed performance analysis. The response format needs adjustment for optimal display. Full analysis available in backend logs.",
        "actionable_steps": [
          "Check backend console for complete AI analysis",
          "Review metrics degradation patterns",
          "Focus on critical performance issues mentioned in logs"
        ],
        "affected_metrics": [],
        "business_impact": "Performance insights available - check logs for detailed recommendations",
        "priority_score": "P3",
        "effort_estimate": "low",
        "raw_analysis_available": true
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755913604494",
    "timestamp": "2025-08-23T01:46:44.494Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:46:20.379Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:45:31.049Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic API and Login Performance Degradation",
        "description": "Critical performance collapse in login, dashboard, and user API endpoints with response times increasing by 400-2800%",
        "business_impact": "Potential revenue loss up to 60%, user abandonment risk, severe conversion rate decline",
        "root_cause_analysis": "Likely database connection pooling failure, inefficient database queries, potential microservice communication bottleneck",
        "immediate_actions": [
          "Immediately scale database connection pools",
          "Implement circuit breakers for API calls",
          "Rollback recent deployment if necessary"
        ],
        "code_optimizations": [
          "Optimize database query indexes",
          "Implement query caching mechanisms",
          "Review and refactor database connection management"
        ],
        "long_term_solutions": [
          "Implement distributed caching layer",
          "Redesign API interaction patterns",
          "Introduce database read replicas"
        ],
        "affected_metrics": [
          "login response avg ms",
          "users api response avg ms",
          "database query avg ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-80% performance recovery"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory and CPU Resource Exhaustion",
        "description": "Significant increase in memory usage (+137.5%) and CPU utilization (+142.9%)",
        "business_impact": "System instability, potential service interruptions, increased infrastructure costs",
        "root_cause_analysis": "Memory leaks, inefficient resource allocation, potential uncontrolled background processes",
        "immediate_actions": [
          "Enable automatic memory profiling",
          "Implement aggressive garbage collection",
          "Temporarily increase server resources"
        ],
        "code_optimizations": [
          "Identify and close unresolved Promise chains",
          "Optimize event listener management",
          "Implement manual memory release strategies"
        ],
        "long_term_solutions": [
          "Comprehensive memory profiling strategy",
          "Implement advanced Node.js memory management",
          "Design resource-aware microservice architecture"
        ],
        "affected_metrics": [
          "memory usage avg mb",
          "cpu utilization avg pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-70% resource efficiency"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Performance and Core Web Vitals Deterioration",
        "description": "Massive increase in First Contentful Paint (FCP) and Largest Contentful Paint (LCP) metrics",
        "business_impact": "SEO ranking drop, increased user bounce rates, poor mobile experience",
        "root_cause_analysis": "Potential large bundle sizes, inefficient rendering, unoptimized asset loading",
        "immediate_actions": [
          "Enable code splitting",
          "Implement lazy loading for components",
          "Optimize critical rendering path"
        ],
        "code_optimizations": [
          "Reduce JavaScript bundle size",
          "Implement server-side rendering optimizations",
          "Use dynamic import for heavy components"
        ],
        "long_term_solutions": [
          "Migrate to progressive rendering strategies",
          "Implement advanced performance monitoring",
          "Develop comprehensive performance budget"
        ],
        "affected_metrics": [
          "test app fcp avg",
          "test app lcp avg",
          "test app ttfb avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-60% rendering performance"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755913275822",
    "timestamp": "2025-08-23T01:41:15.822Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:40:08.904Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:39:33.020Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "parsing_issue",
        "severity": "medium",
        "confidence": 0.6,
        "title": "AI Analysis Generated (Display Issue)",
        "description": "AI provided detailed performance analysis. The response format needs adjustment for optimal display. Full analysis available in backend logs.",
        "actionable_steps": [
          "Check backend console for complete AI analysis",
          "Review metrics degradation patterns",
          "Focus on critical performance issues mentioned in logs"
        ],
        "affected_metrics": [],
        "business_impact": "Performance insights available - check logs for detailed recommendations",
        "priority_score": "P3",
        "effort_estimate": "low",
        "raw_analysis_available": true
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755912484147",
    "timestamp": "2025-08-23T01:28:04.147Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:27:32.468Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:26:53.630Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic API Response Time Degradation",
        "description": "Users API and login endpoints experiencing massive performance collapse, with response times increasing by 2700-4400%",
        "business_impact": "Potential revenue loss of 60-80% due to user experience breakdown, estimated conversion rate drop of 50%",
        "root_cause_analysis": "Likely database connection pooling issues, unoptimized database queries, or potential infrastructure resource exhaustion",
        "immediate_actions": [
          "Immediate rollback to previous stable version",
          "Scale up database connection pool",
          "Implement emergency caching layer"
        ],
        "code_optimizations": [
          "Optimize database query indexes",
          "Implement connection pooling with proper timeout management",
          "Add circuit breakers for database interactions"
        ],
        "long_term_solutions": [
          "Comprehensive database query audit",
          "Implement distributed caching strategy",
          "Refactor database access layer"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "login_response_avg_ms",
          "database_query_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-90% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory and CPU Resource Exhaustion",
        "description": "Critical increase in memory usage (+137.5%) and CPU utilization (+142.9%)",
        "business_impact": "System instability, potential service outages, estimated 40-60% user experience degradation",
        "root_cause_analysis": "Memory leaks in Node.js application, inefficient resource management, potential uncontrolled asynchronous operations",
        "immediate_actions": [
          "Implement memory profiling",
          "Force garbage collection",
          "Add additional server resources temporarily"
        ],
        "code_optimizations": [
          "Identify and close unmanaged event listeners",
          "Optimize memory-intensive operations",
          "Implement stream processing for large data sets"
        ],
        "long_term_solutions": [
          "Comprehensive memory leak detection",
          "Refactor asynchronous code patterns",
          "Implement intelligent resource management"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-70% resource efficiency"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Performance Critical Rendering Path",
        "description": "Severe degradation in Core Web Vitals: FCP increased by 372%, LCP by 439%",
        "business_impact": "SEO ranking drop, increased bounce rates, potential 30-50% traffic loss",
        "root_cause_analysis": "Inefficient JavaScript bundling, render-blocking resources, complex component rendering",
        "immediate_actions": [
          "Enable browser caching",
          "Minimize critical rendering path",
          "Implement lazy loading"
        ],
        "code_optimizations": [
          "Code-split large JavaScript bundles",
          "Optimize React component rendering",
          "Implement memoization for complex components"
        ],
        "long_term_solutions": [
          "Migrate to modern rendering strategies",
          "Implement server-side rendering",
          "Use performance-optimized frameworks"
        ],
        "affected_metrics": [
          "test_app_fcp_avg",
          "test_app_lcp_avg",
          "test_app_ttfb_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "40-60% rendering performance"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755912304548",
    "timestamp": "2025-08-23T01:25:04.548Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:24:11.048Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:23:30.979Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Global Memory Leaks and Unbounded Data Accumulation",
        "description": "Multiple global variables and global arrays are continuously growing without proper cleanup, causing memory exhaustion and performance degradation",
        "business_impact": "50-75% potential memory overhead, increased server/client resource consumption, potential application instability",
        "root_cause_analysis": "Unchecked global variable growth in multiple components (Dashboard, Calendar, App.jsx, server.js)",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "login",
              "loadAllUserData"
            ],
            "lines": [
              206,
              220,
              250
            ],
            "issue": "Storing massive session data in global variables"
          },
          {
            "path": "backend/server.js",
            "functions": [
              "wss.on('connection')",
              "startPeriodicTasks"
            ],
            "lines": [
              1350,
              1500
            ],
            "issue": "WebSocket connections and notification intervals without proper cleanup"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "userSessions.push({ ... massive data ... });",
            "optimized_code": "if (userSessions.length > 100) userSessions.shift(); // Limit array size\nuserSessions.push(compactSessionData);",
            "explanation": "Implement size-limited arrays to prevent unbounded growth",
            "expected_improvement": "70-80% reduction in memory usage"
          }
        ],
        "immediate_actions": [
          "Implement global variable size limits",
          "Add explicit memory cleanup mechanisms",
          "Use WeakMap/WeakSet for reference tracking"
        ],
        "long_term_solutions": [
          "Implement proper memory management strategies",
          "Use server-side session management",
          "Introduce periodic garbage collection"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "memory_usage_p95_mb",
          "js_heap_size_avg_mb"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-75% memory usage reduction"
      },
      {
        "type": "code_optimization",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Inefficient Database Querying and N+1 Query Problem",
        "description": "Multiple API endpoints perform sequential database queries, causing exponential performance degradation",
        "business_impact": "400-600% increase in API response times, potential system overload",
        "root_cause_analysis": "Nested database queries without proper join/batch strategies",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "app.get('/api/users')",
              "app.get('/api/calendar/:userId')",
              "app.get('/api/resources')"
            ],
            "lines": [
              450,
              650,
              900
            ],
            "issue": "Sequential queries for each user/resource"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "db.all(`SELECT * FROM users`)\n  users.forEach(user => {\n    db.all(`SELECT * FROM meetings WHERE user_id = ?`, [user.id])\n  })",
            "optimized_code": "const query = `\n  SELECT u.*, m.* FROM users u\n  LEFT JOIN meetings m ON u.id = m.user_id\n  GROUP BY u.id\n`",
            "explanation": "Use single JOIN query instead of sequential queries",
            "expected_improvement": "300-500% query performance improvement"
          }
        ],
        "immediate_actions": [
          "Implement JOIN queries",
          "Add database indexing",
          "Use batch data fetching"
        ],
        "long_term_solutions": [
          "Implement data loader patterns",
          "Consider read replicas",
          "Use GraphQL for precise data fetching"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "database_query_avg_ms",
          "login_response_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "300-500% API response time reduction"
      },
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Excessive Render and Computation in React Components",
        "description": "Components perform heavy computations during render, causing significant performance overhead",
        "business_impact": "400-600% increased CPU utilization, poor user experience",
        "root_cause_analysis": "Expensive calculations in render methods and useEffect hooks without memoization",
        "affected_files": [
          {
            "path": "frontend/src/App.jsx",
            "functions": [
              "computeExpensiveData",
              "login"
            ],
            "lines": [
              150,
              250
            ],
            "issue": "Heavy computations during every render"
          },
          {
            "path": "frontend/src/components/Dashboard.jsx",
            "functions": [
              "computeDashboardMetrics"
            ],
            "lines": [
              100,
              150
            ],
            "issue": "Repeated expensive metric calculations"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/App.jsx",
            "current_code": "const expensiveData = computeExpensiveData();",
            "optimized_code": "const expensiveData = useMemo(() => computeExpensiveData(), []);",
            "explanation": "Use useMemo to cache expensive computations",
            "expected_improvement": "70-80% render performance improvement"
          }
        ],
        "immediate_actions": [
          "Implement useMemo for expensive calculations",
          "Move heavy computations out of render",
          "Use Web Workers for background processing"
        ],
        "long_term_solutions": [
          "Implement code splitting",
          "Use React.lazy for component loading",
          "Introduce performance monitoring"
        ],
        "affected_metrics": [
          "cpu_utilization_avg_pct",
          "test_app_fcp_avg",
          "test_app_lcp_avg"
        ],
        "priority_score": "P1",
        "effort_estimate": "medium",
        "expected_improvement": "60-75% render performance improvement"
      },
      {
        "type": "code_optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "WebSocket Performance and Connection Management",
        "description": "Inefficient WebSocket implementation with memory leaks and heavy processing",
        "business_impact": "Increased server load, potential connection instability",
        "root_cause_analysis": "No proper WebSocket connection cleanup, heavy message processing",
        "affected_files": [
          {
            "path": "backend/server.js",
            "functions": [
              "wss.on('connection')",
              "startPeriodicTasks"
            ],
            "lines": [
              1200,
              1350
            ],
            "issue": "Unmanaged WebSocket connections and message processing"
          }
        ],
        "code_recommendations": [
          {
            "file": "backend/server.js",
            "current_code": "ws.on('message', (message) => { /* Heavy processing */ })",
            "optimized_code": "ws.on('message', throttle((message) => { /* Lightweight processing */ }, 100))",
            "explanation": "Implement message processing throttling",
            "expected_improvement": "50-60% WebSocket performance improvement"
          }
        ],
        "immediate_actions": [
          "Implement connection cleanup",
          "Add message processing throttling",
          "Limit connection and message payload size"
        ],
        "long_term_solutions": [
          "Implement connection pool management",
          "Use more efficient real-time communication protocols"
        ],
        "affected_metrics": [
          "websocket_connection_avg_ms",
          "notification_processing_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "40-50% WebSocket connection stability"
      },
      {
        "type": "monitoring",
        "severity": "medium",
        "confidence": 0.65,
        "title": "Performance Monitoring and Error Handling Strategy",
        "description": "Lack of comprehensive performance monitoring and error boundary mechanisms",
        "business_impact": "Limited visibility into performance bottlenecks, potential unhandled errors",
        "root_cause_analysis": "Missing error boundaries, no centralized performance tracking",
        "affected_files": [
          {
            "path": "frontend/src/main.jsx",
            "functions": [
              "ReactDOM.createRoot()"
            ],
            "lines": [
              8,
              12
            ],
            "issue": "No error boundary implementation"
          }
        ],
        "code_recommendations": [
          {
            "file": "frontend/src/main.jsx",
            "current_code": "root.render(<React.StrictMode><App /></React.StrictMode>)",
            "optimized_code": "const ErrorBoundary = ({ children }) => {\n  // Implement error boundary logic\n}\n\nroot.render(\n  <ErrorBoundary>\n    <React.StrictMode><App /></React.StrictMode>\n  </ErrorBoundary>\n)",
            "explanation": "Add error boundary for better error management",
            "expected_improvement": "Improved error tracking and user experience"
          }
        ],
        "immediate_actions": [
          "Implement React Error Boundaries",
          "Add performance monitoring hooks",
          "Implement centralized error logging"
        ],
        "long_term_solutions": [
          "Integrate advanced performance monitoring tools",
          "Implement comprehensive logging strategy"
        ],
        "affected_metrics": [
          "error_rate",
          "checks_total_fails"
        ],
        "priority_score": "P3",
        "effort_estimate": "low",
        "expected_improvement": "Enhanced error visibility and tracking"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755911832720",
    "timestamp": "2025-08-23T01:17:12.720Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:16:26.046Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:15:45.345Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "I'll analyze the performance degradation by correlating the metrics with the intentional performance issues in the test-app source code. I'll provide a comprehensive JSON analysis focusing on the most critical issues.\n\n```json\n[\n  {\n    \"type\": \"critical_issue\",\n    \"severity\": \"critical\",\n    \"confidence\": 0.95,\n    \"title\": \"Massive Database Queries and N+1 Problem in User Endpoint\",\n    \"description\": \"The '/api/users' endpoint performs highly inefficient database queries, causing severe perf...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755911565682",
    "timestamp": "2025-08-23T01:12:45.682Z",
    "baseline": {
      "name": "test-baseline",
      "timestamp": "2025-08-23T01:12:22.042Z",
      "metrics": {
        "response_time": 100,
        "error_rate": 0.02,
        "memory_usage": 120,
        "cpu_usage": 35
      }
    },
    "current": {
      "name": "test-current",
      "timestamp": "2025-08-23T01:12:22.043Z",
      "metrics": {
        "response_time": 250,
        "error_rate": 0.08,
        "memory_usage": 180,
        "cpu_usage": 75
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the performance degradation analysis, here's a comprehensive performance investigation report:\n\n[\n  {\n    \"type\": \"critical_issue\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.9,\n    \"title\": \"Massive Response Time Degradation and System Instability\",\n    \"description\": \"Response time increased by 150% from 100ms to 250ms, indicating severe performance bottlenecks across the application stack\",\n    \"business_impact\": \"Potential 40-60% user abandonment, estimated revenue loss of $50...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 0,
      "worse": 4,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755911399521",
    "timestamp": "2025-08-23T01:09:59.521Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:09:35.080Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:08:43.281Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Massive API Response Time Degradation",
        "description": "Users API response times increased by 2775%, with average response time jumping from 320ms to 9200ms, indicating severe backend performance collapse",
        "business_impact": "Potential 50-70% user session abandonment, estimated revenue loss of $50-100K per day",
        "root_cause_analysis": "Likely database connection pooling issues, unoptimized database queries, or unexpected load on user management services",
        "immediate_actions": [
          "Implement emergency circuit breakers",
          "Temporarily scale up database and application servers",
          "Roll back recent deployment if identified"
        ],
        "code_optimizations": [
          "Audit and index database queries",
          "Implement connection pooling optimizations",
          "Add request-level timeouts"
        ],
        "long_term_solutions": [
          "Redesign user API architecture",
          "Implement advanced caching strategies",
          "Introduce horizontal scaling for user services"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "users_api_response_p95_ms",
          "error_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "80-90% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.88,
        "title": "Critical Database Query Performance Degradation",
        "description": "Database query times increased 177.8%, from 45ms to 125ms, indicating potential systemic database issues",
        "business_impact": "Potential transaction failures, user experience disruption, estimated conversion rate drop of 30-40%",
        "root_cause_analysis": "Possible missing indexes, inefficient query patterns, connection pool exhaustion, or increased data volume",
        "immediate_actions": [
          "Analyze slow query logs",
          "Increase database connection pool",
          "Implement temporary query-level caching"
        ],
        "code_optimizations": [
          "Review and optimize complex JOIN operations",
          "Add missing database indexes",
          "Implement query result memoization"
        ],
        "long_term_solutions": [
          "Database schema redesign",
          "Implement read replicas",
          "Adopt advanced caching mechanisms"
        ],
        "affected_metrics": [
          "database_query_avg_ms",
          "database_query_p95_ms",
          "successful_requests_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% query performance improvement"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Core Web Vitals Performance Degradation",
        "description": "First Contentful Paint (FCP) increased from 1100ms to 5200ms, Largest Contentful Paint (LCP) from 1650ms to 8900ms",
        "business_impact": "SEO ranking drop, increased bounce rates, estimated 40-50% user engagement reduction",
        "root_cause_analysis": "Potential frontend rendering bottlenecks, unoptimized asset loading, inefficient JavaScript execution",
        "immediate_actions": [
          "Enable browser caching",
          "Minimize critical rendering path",
          "Implement performance budget"
        ],
        "code_optimizations": [
          "Code-split JavaScript bundles",
          "Implement lazy loading for non-critical resources",
          "Optimize client-side rendering logic"
        ],
        "long_term_solutions": [
          "Adopt server-side rendering",
          "Implement advanced performance monitoring",
          "Redesign frontend architecture for performance"
        ],
        "affected_metrics": [
          "test_app_fcp_avg",
          "test_app_lcp_avg",
          "test_app_ttfb_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "60-70% Core Web Vitals enhancement"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 8
    }
  },
  {
    "id": "1755910975318",
    "timestamp": "2025-08-23T01:02:55.318Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:02:11.838Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:01:36.601Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "render_blocking_avg_ms": 1200,
        "render_blocking_p95_ms": 1750,
        "render_blocking_min_ms": 800,
        "render_blocking_max_ms": 1800,
        "render_blocking_p90_ms": 1650,
        "render_blocking_med_ms": 1150,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Massive API Response Time Degradation",
        "description": "Users API response time increased from ~320ms to 9200ms (2775% increase), indicating severe backend performance collapse",
        "business_impact": "Potential 50-70% user session abandonment, estimated revenue loss of $50-100K per day",
        "root_cause_analysis": "Likely database connection pooling issues, unoptimized database queries, or potential N+1 query problem in user-related API endpoints",
        "immediate_actions": [
          "Implement emergency database connection circuit breaker",
          "Rollback recent code changes",
          "Scale database connection pool"
        ],
        "code_optimizations": [
          "Add database query caching layer",
          "Optimize complex JOIN queries",
          "Implement query result pagination"
        ],
        "long_term_solutions": [
          "Redesign data access layer",
          "Implement read replicas",
          "Introduce query performance monitoring"
        ],
        "affected_metrics": [
          "users_api_response_avg_ms",
          "users_api_response_p95_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "80-90% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Critical Database Query Performance Degradation",
        "description": "Database query times increased from ~45ms to 125ms (177.8% increase), indicating systemic database performance issues",
        "business_impact": "Potential 40-60% increased infrastructure costs, potential service unavailability",
        "root_cause_analysis": "Missing database indexes, inefficient query execution plans, potential connection pool exhaustion",
        "immediate_actions": [
          "Analyze and create missing database indexes",
          "Review and optimize slow queries",
          "Increase database connection timeout"
        ],
        "code_optimizations": [
          "Use database query explain plans",
          "Implement query-level caching",
          "Optimize ORM query generation"
        ],
        "long_term_solutions": [
          "Implement database performance testing",
          "Create comprehensive indexing strategy",
          "Consider database sharding"
        ],
        "affected_metrics": [
          "database_query_avg_ms",
          "database_query_p95_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "70-85% query performance improvement"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Frontend Rendering Performance Bottleneck",
        "description": "First Contentful Paint (FCP) increased from 1100ms to 5200ms (372.7% increase), indicating critical frontend rendering issues",
        "business_impact": "Estimated 40-55% increase in user bounce rates, potential SEO ranking drops",
        "root_cause_analysis": "Large JavaScript bundle, unoptimized rendering, potential memory leaks in React components",
        "immediate_actions": [
          "Enable code splitting",
          "Implement lazy loading",
          "Minimize critical rendering path"
        ],
        "code_optimizations": [
          "Use React.memo() for component memoization",
          "Implement performance-focused component design",
          "Reduce unnecessary re-renders"
        ],
        "long_term_solutions": [
          "Implement comprehensive performance audit",
          "Create performance budget",
          "Adopt server-side rendering"
        ],
        "affected_metrics": [
          "test_app_fcp_avg",
          "test_app_lcp_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "60-75% rendering performance gain"
      },
      {
        "type": "monitoring",
        "severity": "high",
        "confidence": 0.65,
        "title": "Infrastructure Resource Monitoring",
        "description": "CPU utilization spiked from 35% to 85%, memory usage increased from 120MB to 285MB",
        "business_impact": "Increased infrastructure costs, potential service instability",
        "root_cause_analysis": "Memory leaks, inefficient resource allocation, potential runaway processes",
        "immediate_actions": [
          "Implement aggressive memory profiling",
          "Configure automatic instance scaling",
          "Add comprehensive logging"
        ],
        "code_optimizations": [
          "Use Node.js memory profiling tools",
          "Implement garbage collection monitoring",
          "Optimize memory-intensive operations"
        ],
        "long_term_solutions": [
          "Develop resource consumption dashboard",
          "Create automated performance test suite",
          "Implement predictive scaling"
        ],
        "affected_metrics": [
          "cpu_utilization_avg_pct",
          "memory_usage_avg_mb"
        ],
        "priority_score": "P3",
        "effort_estimate": "medium",
        "expected_improvement": "40-60% resource efficiency"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 14
    }
  },
  {
    "id": "1755910856974",
    "timestamp": "2025-08-23T01:00:56.974Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T01:00:31.452Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "error_rate": 0.045,
        "errors_threshold_ok": 1
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T01:00:31.455Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "error_rate": 0.16,
        "errors_threshold_ok": 0
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Extreme Login and Dashboard Performance Degradation",
        "description": "Login response time increased by 394-452%, dashboard load time increased by 608-619%, indicating severe backend performance bottlenecks",
        "business_impact": "Potential 60-75% user abandonment risk, estimated revenue loss of $50-100K per month due to poor user experience",
        "root_cause_analysis": "Likely database connection pooling issues, inefficient query execution, or unoptimized authentication middleware",
        "immediate_actions": [
          "Implement connection pool limit increases",
          "Add database query caching",
          "Rollback recent authentication code changes"
        ],
        "code_optimizations": [
          "Optimize database queries with proper indexing",
          "Implement connection pooling with max connection limits",
          "Use prepared statements to reduce query parsing overhead"
        ],
        "long_term_solutions": [
          "Redesign authentication microservice architecture",
          "Implement distributed caching layer",
          "Create comprehensive performance test suite"
        ],
        "affected_metrics": [
          "login_response_avg_ms",
          "login_response_p95_ms",
          "dashboard_load_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "60-80% response time reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.9,
        "title": "Database Query Performance Collapse",
        "description": "Database query times increased by 177-229%, indicating systemic database performance degradation",
        "business_impact": "Potential data retrieval delays, increased infrastructure costs, potential system instability",
        "root_cause_analysis": "Missing database indexes, inefficient query patterns, potential N+1 query problem in ORM layer",
        "immediate_actions": [
          "Analyze slow query logs",
          "Add missing database indexes",
          "Implement query result caching"
        ],
        "code_optimizations": [
          "Use database explain plan to identify query bottlenecks",
          "Optimize complex join queries",
          "Implement eager loading to reduce N+1 query patterns"
        ],
        "long_term_solutions": [
          "Comprehensive database schema review",
          "Implement advanced caching strategies",
          "Consider database horizontal scaling"
        ],
        "affected_metrics": [
          "database_query_avg_ms",
          "database_query_p95_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "50-70% query performance improvement"
      },
      {
        "type": "optimization",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Memory and CPU Resource Exhaustion",
        "description": "Memory usage increased 131-137%, CPU utilization jumped 142-333%, indicating critical resource management issues",
        "business_impact": "Potential system instability, increased cloud infrastructure costs, degraded user experience",
        "root_cause_analysis": "Memory leaks in Node.js application, inefficient JavaScript event loop management, potential uncontrolled resource allocation",
        "immediate_actions": [
          "Implement memory profiling",
          "Add automatic process restart mechanisms",
          "Reduce concurrent request handling"
        ],
        "code_optimizations": [
          "Use memory-efficient data structures",
          "Implement proper stream management",
          "Add garbage collection monitoring"
        ],
        "long_term_solutions": [
          "Refactor memory-intensive components",
          "Implement microservice architecture",
          "Create comprehensive memory leak detection pipeline"
        ],
        "affected_metrics": [
          "memory_usage_avg_mb",
          "cpu_utilization_avg_pct"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "40-60% resource efficiency"
      },
      {
        "type": "monitoring",
        "severity": "high",
        "confidence": 0.75,
        "title": "Performance Monitoring and Alerting Enhancement",
        "description": "Error rates increased to 0.16 (255% increase), indicating need for robust monitoring",
        "business_impact": "Reduced system reliability, potential customer trust erosion",
        "root_cause_analysis": "Insufficient error tracking, lack of comprehensive performance monitoring",
        "immediate_actions": [
          "Implement advanced error tracking",
          "Set up real-time performance alerts",
          "Create detailed error categorization"
        ],
        "code_optimizations": [
          "Add centralized error logging",
          "Implement comprehensive error boundaries",
          "Create detailed performance tracing"
        ],
        "long_term_solutions": [
          "Develop observability platform",
          "Create automated incident response workflows",
          "Implement machine learning-based anomaly detection"
        ],
        "affected_metrics": [
          "error_rate",
          "successful_requests_rate"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "30-50% improved system observability"
      }
    ],
    "summary": {
      "improved": 13,
      "worse": 62,
      "same": 0,
      "unknown": 2
    }
  },
  {
    "id": "1755910511104",
    "timestamp": "2025-08-23T00:55:11.104Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T00:54:43.573Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T00:53:53.517Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "render_blocking_avg_ms": 1200,
        "render_blocking_p95_ms": 1750,
        "render_blocking_min_ms": 800,
        "render_blocking_max_ms": 1800,
        "render_blocking_p90_ms": 1650,
        "render_blocking_med_ms": 1150,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance analysis, here's a strategic breakdown:\n\n[\n  {\n    \"type\": \"critical_issue\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.95,\n    \"title\": \"Catastrophic API Response Time Degradation\",\n    \"description\": \"Users API experiencing massive 2775% response time increase, from 320ms to 9200ms average\",\n    \"business_impact\": \"Potential 50-70% user abandonment, estimated $500K-$1M monthly revenue loss\",\n    \"root_cause_analysis\": \"Likely database connection poo...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 14
    }
  },
  {
    "id": "1755910211703",
    "timestamp": "2025-08-23T00:50:11.703Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T00:49:30.974Z",
      "metrics": {
        "checks_rate": 0.952,
        "test_app_http_req_failed_rate": 0.015,
        "test_app_inp_avg": 65,
        "test_app_inp_p95": 90,
        "test_app_inp_min": 45,
        "test_app_inp_max": 95,
        "test_app_inp_p90": 85,
        "test_app_inp_med": 62,
        "login_response_avg_ms": 850,
        "login_response_p95_ms": 1150,
        "login_response_min_ms": 600,
        "login_response_max_ms": 1200,
        "login_response_p90_ms": 1050,
        "login_response_med_ms": 820,
        "dashboard_load_avg_ms": 1200,
        "dashboard_load_p95_ms": 1700,
        "dashboard_load_min_ms": 800,
        "dashboard_load_max_ms": 1800,
        "dashboard_load_p90_ms": 1600,
        "dashboard_load_med_ms": 1150,
        "api_response_avg_ms": 180,
        "api_response_p95_ms": 260,
        "api_response_min_ms": 120,
        "api_response_max_ms": 280,
        "api_response_p90_ms": 240,
        "api_response_med_ms": 170,
        "users_api_response_avg_ms": 320,
        "users_api_response_p95_ms": 480,
        "users_api_response_min_ms": 200,
        "users_api_response_max_ms": 500,
        "users_api_response_p90_ms": 450,
        "users_api_response_med_ms": 300,
        "database_query_avg_ms": 45,
        "database_query_p95_ms": 78,
        "database_query_min_ms": 20,
        "database_query_max_ms": 85,
        "database_query_p90_ms": 70,
        "database_query_med_ms": 42,
        "memory_usage_avg_mb": 120,
        "memory_usage_p95_mb": 155,
        "memory_usage_min_mb": 95,
        "memory_usage_max_mb": 160,
        "memory_usage_p90_mb": 145,
        "memory_usage_med_mb": 118,
        "cpu_utilization_avg_pct": 35,
        "cpu_utilization_p95_pct": 60,
        "cpu_utilization_min_pct": 15,
        "cpu_utilization_max_pct": 65,
        "cpu_utilization_p90_pct": 55,
        "cpu_utilization_med_pct": 32,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "test_app_fcp_avg": 1100,
        "test_app_fcp_p95": 1400,
        "test_app_fcp_min": 800,
        "test_app_fcp_max": 1500,
        "test_app_fcp_p90": 1350,
        "test_app_fcp_med": 1050,
        "test_app_lcp_avg": 1650,
        "test_app_lcp_p95": 2100,
        "test_app_lcp_min": 1200,
        "test_app_lcp_max": 2200,
        "test_app_lcp_p90": 2000,
        "test_app_lcp_med": 1600,
        "test_app_cls_avg": 0.035,
        "test_app_cls_p95": 0.07,
        "test_app_cls_min": 0.005,
        "test_app_cls_max": 0.08,
        "test_app_cls_p90": 0.06,
        "test_app_cls_med": 0.032,
        "test_app_ttfb_avg": 280,
        "test_app_ttfb_p95": 450,
        "test_app_ttfb_min": 150,
        "test_app_ttfb_max": 520,
        "test_app_ttfb_p90": 380,
        "test_app_ttfb_med": 270,
        "websocket_connection_avg_ms": 120,
        "websocket_connection_p95_ms": 170,
        "websocket_connection_min_ms": 80,
        "websocket_connection_max_ms": 180,
        "websocket_connection_p90_ms": 160,
        "websocket_connection_med_ms": 115,
        "meeting_creation_avg_ms": 650,
        "meeting_creation_p95_ms": 900,
        "meeting_creation_min_ms": 450,
        "meeting_creation_max_ms": 950,
        "meeting_creation_p90_ms": 850,
        "meeting_creation_med_ms": 620,
        "calendar_navigation_avg_ms": 380,
        "calendar_navigation_p95_ms": 520,
        "calendar_navigation_min_ms": 250,
        "calendar_navigation_max_ms": 550,
        "calendar_navigation_p90_ms": 480,
        "calendar_navigation_med_ms": 360,
        "notification_processing_avg_ms": 95,
        "notification_processing_p95_ms": 140,
        "notification_processing_min_ms": 60,
        "notification_processing_max_ms": 150,
        "notification_processing_p90_ms": 125,
        "notification_processing_med_ms": 90,
        "resource_load_avg_ms": 420,
        "resource_load_p95_ms": 620,
        "resource_load_min_ms": 280,
        "resource_load_max_ms": 650,
        "resource_load_p90_ms": 580,
        "resource_load_med_ms": 400,
        "profile_load_avg_ms": 480,
        "profile_load_p95_ms": 680,
        "profile_load_min_ms": 320,
        "profile_load_max_ms": 720,
        "profile_load_p90_ms": 640,
        "profile_load_med_ms": 460,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T00:48:55.157Z",
      "metrics": {
        "checks_rate": 0.496,
        "test_app_http_req_failed_rate": 0.085,
        "test_app_inp_avg": 58,
        "test_app_inp_p95": 80,
        "test_app_inp_min": 38,
        "test_app_inp_max": 85,
        "test_app_inp_p90": 75,
        "test_app_inp_med": 55,
        "login_response_avg_ms": 4200,
        "login_response_p95_ms": 6200,
        "login_response_min_ms": 2800,
        "login_response_max_ms": 6500,
        "login_response_p90_ms": 5800,
        "login_response_med_ms": 4100,
        "dashboard_load_avg_ms": 8500,
        "dashboard_load_p95_ms": 12200,
        "dashboard_load_min_ms": 6200,
        "dashboard_load_max_ms": 12800,
        "dashboard_load_p90_ms": 11500,
        "dashboard_load_med_ms": 8200,
        "api_response_avg_ms": 145,
        "api_response_p95_ms": 210,
        "api_response_min_ms": 95,
        "api_response_max_ms": 220,
        "api_response_p90_ms": 190,
        "api_response_med_ms": 140,
        "users_api_response_avg_ms": 9200,
        "users_api_response_p95_ms": 14200,
        "users_api_response_min_ms": 6500,
        "users_api_response_max_ms": 15000,
        "users_api_response_p90_ms": 13500,
        "users_api_response_med_ms": 8900,
        "database_query_avg_ms": 125,
        "database_query_p95_ms": 250,
        "database_query_min_ms": 65,
        "database_query_max_ms": 280,
        "database_query_p90_ms": 220,
        "database_query_med_ms": 118,
        "memory_usage_avg_mb": 285,
        "memory_usage_p95_mb": 365,
        "memory_usage_min_mb": 220,
        "memory_usage_max_mb": 380,
        "memory_usage_p90_mb": 340,
        "memory_usage_med_mb": 275,
        "cpu_utilization_avg_pct": 85,
        "cpu_utilization_p95_pct": 97,
        "cpu_utilization_min_pct": 65,
        "cpu_utilization_max_pct": 98,
        "cpu_utilization_p90_pct": 95,
        "cpu_utilization_med_pct": 82,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "test_app_fcp_avg": 5200,
        "test_app_fcp_p95": 7200,
        "test_app_fcp_min": 3800,
        "test_app_fcp_max": 7500,
        "test_app_fcp_p90": 6800,
        "test_app_fcp_med": 5100,
        "test_app_lcp_avg": 8900,
        "test_app_lcp_p95": 12800,
        "test_app_lcp_min": 6200,
        "test_app_lcp_max": 13500,
        "test_app_lcp_p90": 12000,
        "test_app_lcp_med": 8600,
        "test_app_cls_avg": 0.038,
        "test_app_cls_p95": 0.075,
        "test_app_cls_min": 0.006,
        "test_app_cls_max": 0.09,
        "test_app_cls_p90": 0.065,
        "test_app_cls_med": 0.035,
        "test_app_ttfb_avg": 1850,
        "test_app_ttfb_p95": 2800,
        "test_app_ttfb_min": 950,
        "test_app_ttfb_max": 3200,
        "test_app_ttfb_p90": 2500,
        "test_app_ttfb_med": 1750,
        "websocket_connection_avg_ms": 95,
        "websocket_connection_p95_ms": 135,
        "websocket_connection_min_ms": 65,
        "websocket_connection_max_ms": 140,
        "websocket_connection_p90_ms": 125,
        "websocket_connection_med_ms": 92,
        "meeting_creation_avg_ms": 6800,
        "meeting_creation_p95_ms": 10200,
        "meeting_creation_min_ms": 4200,
        "meeting_creation_max_ms": 11000,
        "meeting_creation_p90_ms": 9500,
        "meeting_creation_med_ms": 6500,
        "calendar_navigation_avg_ms": 4500,
        "calendar_navigation_p95_ms": 6900,
        "calendar_navigation_min_ms": 2800,
        "calendar_navigation_max_ms": 7200,
        "calendar_navigation_p90_ms": 6500,
        "calendar_navigation_med_ms": 4200,
        "notification_processing_avg_ms": 72,
        "notification_processing_p95_ms": 105,
        "notification_processing_min_ms": 45,
        "notification_processing_max_ms": 110,
        "notification_processing_p90_ms": 95,
        "notification_processing_med_ms": 68,
        "resource_load_avg_ms": 5200,
        "resource_load_p95_ms": 8000,
        "resource_load_min_ms": 3500,
        "resource_load_max_ms": 8500,
        "resource_load_p90_ms": 7500,
        "resource_load_med_ms": 4900,
        "profile_load_avg_ms": 495,
        "profile_load_p95_ms": 705,
        "profile_load_min_ms": 335,
        "profile_load_max_ms": 750,
        "profile_load_p90_ms": 665,
        "profile_load_med_ms": 475,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "js_heap_size_avg_mb": 245,
        "js_heap_size_p95_mb": 340,
        "js_heap_size_min_mb": 180,
        "js_heap_size_max_mb": 350,
        "js_heap_size_p90_mb": 320,
        "js_heap_size_med_mb": 235,
        "render_blocking_avg_ms": 1200,
        "render_blocking_p95_ms": 1750,
        "render_blocking_min_ms": 800,
        "render_blocking_max_ms": 1800,
        "render_blocking_p90_ms": 1650,
        "render_blocking_med_ms": 1150,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance analysis, here's a structured JSON response capturing the critical insights:\n\n[\n  {\n    \"type\": \"critical_issue\",\n    \"severity\": \"critical\",\n    \"confidence\": 0.95,\n    \"title\": \"Catastrophic API Response Time Degradation\",\n    \"description\": \"Users API response times increased by 2775%, with average response time jumping from 320ms to 9200ms\",\n    \"business_impact\": \"Potential revenue loss of 40-60%, high user abandonment risk, estimated conversion drop o...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 25,
      "worse": 84,
      "same": 6,
      "unknown": 14
    }
  },
  {
    "id": "1755908466177",
    "timestamp": "2025-08-23T00:21:06.177Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-23T00:20:26.003Z",
      "metrics": {
        "checks_rate": 0.952,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-23T00:19:57.380Z",
      "metrics": {
        "checks_rate": 0.496,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Massive Error Rate Explosion and System Reliability Breakdown",
        "description": "Error rate surged from 4.5% to 16%, with checks total fails increasing by 950% (252 fails vs 24 previously)",
        "business_impact": "Potential revenue loss of 15-25%, significant user trust erosion, potential SLA violations",
        "root_cause_analysis": "Likely infrastructure instability, recent deployment issues, or cascading system failure",
        "immediate_actions": [
          "Immediate rollback to previous stable deployment",
          "Activate emergency monitoring and incident response",
          "Conduct emergency system health check"
        ],
        "code_optimizations": [
          "Review recent deployment commit changes",
          "Implement circuit breaker patterns",
          "Add comprehensive error logging and tracing"
        ],
        "long_term_solutions": [
          "Implement robust error handling middleware",
          "Develop comprehensive pre-deployment testing",
          "Create automated rollback mechanisms"
        ],
        "affected_metrics": [
          "error_rate",
          "checks_total_fails",
          "successful_requests_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Restore system reliability by 80-90%"
      },
      {
        "type": "root_cause",
        "severity": "high",
        "confidence": 0.85,
        "title": "Performance Checks and Success Rate Degradation",
        "description": "Checks rate and success rate dramatically dropped from 95.2% to 49.6% (-47.9% change)",
        "business_impact": "Potential 40-50% reduction in system reliability, increased user frustration",
        "root_cause_analysis": "Potential database connection issues, resource exhaustion, or middleware bottlenecks",
        "immediate_actions": [
          "Scale database connection pools",
          "Investigate database query performance",
          "Check server resource utilization"
        ],
        "code_optimizations": [
          "Implement connection pooling optimizations",
          "Add query timeout mechanisms",
          "Optimize database indexing strategies"
        ],
        "long_term_solutions": [
          "Implement advanced caching strategies",
          "Develop more resilient connection management",
          "Create comprehensive performance monitoring"
        ],
        "affected_metrics": [
          "checks_rate",
          "checks_success_rate",
          "successful_requests_rate"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "Restore system performance by 60-70%"
      },
      {
        "type": "optimization",
        "severity": "medium",
        "confidence": 0.75,
        "title": "Successful Requests Rate Performance Degradation",
        "description": "Successful requests rate declined from 97% to 82% (-15.5% change)",
        "business_impact": "Potential 10-20% reduction in user transaction completion",
        "root_cause_analysis": "Possible API gateway issues, network latency, or request processing bottlenecks",
        "immediate_actions": [
          "Review API endpoint configurations",
          "Analyze network latency metrics",
          "Investigate request processing middleware"
        ],
        "code_optimizations": [
          "Implement request timeout optimizations",
          "Add comprehensive error handling",
          "Optimize API request processing logic"
        ],
        "long_term_solutions": [
          "Implement advanced request queueing",
          "Develop multi-region load balancing",
          "Create intelligent retry mechanisms"
        ],
        "affected_metrics": [
          "successful_requests_rate"
        ],
        "priority_score": "P3",
        "effort_estimate": "low",
        "expected_improvement": "Restore request success rate by 30-40%"
      }
    ],
    "summary": {
      "improved": 1,
      "worse": 5,
      "same": 0,
      "unknown": 2
    }
  },
  {
    "id": "1755907110481",
    "timestamp": "2025-08-22T23:58:30.482Z",
    "baseline": {
      "name": "test-app-baseline",
      "timestamp": "2025-08-22T23:57:59.674Z",
      "metrics": {
        "checks_rate": 0.952,
        "successful_requests_rate": 0.97,
        "successful_requests_threshold_ok": 1,
        "error_rate": 0.045,
        "errors_threshold_ok": 1,
        "checks_total_passes": 476,
        "checks_total_fails": 24,
        "checks_success_rate": 0.952
      }
    },
    "current": {
      "name": "test-app-current",
      "timestamp": "2025-08-22T23:57:21.645Z",
      "metrics": {
        "checks_rate": 0.496,
        "successful_requests_rate": 0.82,
        "successful_requests_threshold_ok": 0,
        "error_rate": 0.16,
        "errors_threshold_ok": 0,
        "checks_total_passes": 248,
        "checks_total_fails": 252,
        "checks_success_rate": 0.496
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the performance metrics and analysis framework, here's a comprehensive performance investigation:\n\n[\n  {\n    \"type\": \"critical_issue\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.95,\n    \"title\": \"Catastrophic Error Rate Spike\",\n    \"description\": \"Error rate increased from 4.5% to 16%, with total check failures jumping from 24 to 252 instances\",\n    \"business_impact\": \"Potential revenue loss of 15-25%, significant user experience degradation, potential customer churn\",\n    \"root_c...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 1,
      "worse": 5,
      "same": 0,
      "unknown": 2
    }
  },
  {
    "id": "1755901139402",
    "timestamp": "2025-08-22T22:18:59.402Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T22:18:20.767Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T22:17:57.738Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic HTTP Request Failure and Error Rate Escalation",
        "description": "HTTP request failure rate increased from 0.001 to 0.0116 (+1062.8%), with overall error rate skyrocketing from 0.02 to 1.0 (+4900%)",
        "business_impact": "Potential revenue loss of 40-60%, complete user experience breakdown, potential customer churn",
        "root_cause_analysis": "Likely caused by recent code deployment, backend service instability, or critical infrastructure configuration change",
        "immediate_actions": [
          "Immediate rollback to previous stable deployment",
          "Restart critical backend services",
          "Implement emergency circuit breakers"
        ],
        "code_optimizations": [
          "Review error handling mechanisms",
          "Implement robust request retry logic",
          "Add comprehensive error logging and monitoring"
        ],
        "long_term_solutions": [
          "Implement advanced error tracking system",
          "Create comprehensive pre-deployment validation pipeline",
          "Develop automatic rollback mechanisms"
        ],
        "affected_metrics": [
          "http_req_failed_rate",
          "error_rate",
          "successful_requests_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "80-90% error rate reduction"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Severe Page Load and Navigation Performance Degradation",
        "description": "Page load time increased from 2800ms to 28102ms (+903.6%), navigation time from 1200ms to 4659ms (+288.3%)",
        "business_impact": "Estimated 50-70% potential conversion rate drop, significant SEO ranking risk",
        "root_cause_analysis": "Potential issues with database query optimization, inefficient JavaScript rendering, or server-side processing bottlenecks",
        "immediate_actions": [
          "Profile and identify slowest database queries",
          "Enable aggressive server-side caching",
          "Reduce initial JavaScript payload"
        ],
        "code_optimizations": [
          "Implement database query optimization techniques",
          "Use lazy loading for non-critical resources",
          "Minimize blocking rendering operations"
        ],
        "long_term_solutions": [
          "Implement server-side rendering optimization",
          "Develop comprehensive performance budget",
          "Adopt code-splitting strategies"
        ],
        "affected_metrics": [
          "page_load_avg_ms",
          "navigation_avg_ms",
          "lcp_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "high",
        "expected_improvement": "60-75% load time reduction"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Login and Authentication Performance Bottleneck",
        "description": "Login process time increased from 1800ms to 8940ms (+396.7%)",
        "business_impact": "Direct user onboarding friction, potential 30-40% registration abandonment",
        "root_cause_analysis": "Inefficient authentication flow, potential database connection pooling issues",
        "immediate_actions": [
          "Optimize authentication middleware",
          "Implement connection pooling",
          "Add caching for user authentication"
        ],
        "code_optimizations": [
          "Reduce authentication payload size",
          "Implement token-based lightweight authentication",
          "Optimize database queries in login flow"
        ],
        "long_term_solutions": [
          "Microservice-based authentication architecture",
          "Implement multi-layer caching strategy",
          "Develop adaptive authentication mechanisms"
        ],
        "affected_metrics": [
          "login_avg_ms",
          "login_p95_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "50-65% login time reduction"
      },
      {
        "type": "monitoring",
        "severity": "medium",
        "confidence": 0.65,
        "title": "Time to First Byte (TTFB) Performance Degradation",
        "description": "TTFB increased from 350ms to 1130ms (+222.9%)",
        "business_impact": "Increased initial page load perception, potential SEO ranking impact",
        "root_cause_analysis": "Server-side processing delays, potential network configuration issues",
        "immediate_actions": [
          "Review server configuration",
          "Optimize server-side rendering",
          "Implement edge caching"
        ],
        "code_optimizations": [
          "Minimize server-side processing complexity",
          "Use efficient middleware chains",
          "Implement streaming responses"
        ],
        "long_term_solutions": [
          "Adopt edge computing strategies",
          "Implement intelligent caching mechanisms",
          "Develop performance monitoring dashboards"
        ],
        "affected_metrics": [
          "ttfb_avg_ms",
          "ttfb_p95_ms"
        ],
        "priority_score": "P3",
        "effort_estimate": "medium",
        "expected_improvement": "40-50% TTFB reduction"
      },
      {
        "type": "critical_issue",
        "severity": "high",
        "confidence": 0.8,
        "title": "Core Web Vitals Performance Deterioration",
        "description": "First Contentful Paint (FCP) increased from 1200ms to 4814ms (+301%), Largest Contentful Paint (LCP) from 1800ms to 5598ms (+211%)",
        "business_impact": "Significant user experience degradation, potential 25-35% user retention loss",
        "root_cause_analysis": "Complex rendering pipeline, unoptimized asset loading, potential memory management issues",
        "immediate_actions": [
          "Optimize critical rendering path",
          "Implement resource hint strategies",
          "Enable aggressive asset preloading"
        ],
        "code_optimizations": [
          "Use React.lazy for component loading",
          "Implement server-side rendering",
          "Minimize render-blocking resources"
        ],
        "long_term_solutions": [
          "Develop comprehensive performance testing framework",
          "Adopt progressive loading techniques",
          "Implement advanced performance monitoring"
        ],
        "affected_metrics": [
          "fcp_avg_ms",
          "lcp_avg_ms",
          "cls_avg"
        ],
        "priority_score": "P2",
        "effort_estimate": "high",
        "expected_improvement": "50-70% Core Web Vitals enhancement"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755899581078",
    "timestamp": "2025-08-22T21:53:01.078Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T21:52:23.982Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T21:52:00.160Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic HTTP Request Failure Rate Spike",
        "description": "HTTP request failure rate increased from 0.001 to 0.0116 (1062.8% increase), indicating systemic API connectivity and reliability issues",
        "business_impact": "Potential revenue loss of 40-60% due to transaction failures and poor user experience",
        "root_cause_analysis": "Likely caused by infrastructure misconfiguration, network instability, or recent deployment changes in API endpoint handling",
        "immediate_actions": [
          "Rollback recent deployment",
          "Implement circuit breaker pattern",
          "Verify network connectivity"
        ],
        "code_optimizations": [
          "Add comprehensive error handling",
          "Implement robust retry mechanisms",
          "Use exponential backoff for failed requests"
        ],
        "long_term_solutions": [
          "Implement comprehensive monitoring",
          "Design fault-tolerant API communication layer",
          "Create detailed error reporting system"
        ],
        "affected_metrics": [
          "http_req_failed_rate",
          "successful_requests_rate",
          "error_rate"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Restore request success rate to >95%"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Massive Page Load Performance Degradation",
        "description": "Page load times increased from 2800ms to 28102ms (903.6% increase), severely impacting user experience",
        "business_impact": "Potential conversion rate drop of 60-80%, significant SEO ranking penalties",
        "root_cause_analysis": "Potential issues with frontend rendering, backend query optimization, or server-side rendering bottlenecks",
        "immediate_actions": [
          "Profile server-side rendering performance",
          "Investigate database query optimization",
          "Review recent frontend code changes"
        ],
        "code_optimizations": [
          "Implement lazy loading for heavy components",
          "Optimize database query execution plans",
          "Use server-side caching strategies"
        ],
        "long_term_solutions": [
          "Migrate to more performant rendering strategy",
          "Implement comprehensive performance monitoring",
          "Design modular, performance-conscious architecture"
        ],
        "affected_metrics": [
          "page_load_avg_ms",
          "page_load_p95_ms",
          "fcp_avg_ms",
          "lcp_avg_ms"
        ],
        "priority_score": "P1",
        "effort_estimate": "high",
        "expected_improvement": "Reduce page load time to <3000ms"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Login Process Performance Bottleneck",
        "description": "Login process time increased from 1800ms to 8940ms (396.7% increase)",
        "business_impact": "User authentication friction, potential 30-50% user drop-off during login",
        "root_cause_analysis": "Potential authentication service overload, inefficient token generation, database connection issues",
        "immediate_actions": [
          "Optimize authentication middleware",
          "Review database connection pooling",
          "Implement lightweight authentication strategy"
        ],
        "code_optimizations": [
          "Use lightweight JWT tokens",
          "Implement connection pooling",
          "Add aggressive caching for user sessions"
        ],
        "long_term_solutions": [
          "Design microservice-based authentication",
          "Implement distributed caching",
          "Create multi-tier authentication strategy"
        ],
        "affected_metrics": [
          "login_avg_ms",
          "login_p95_ms",
          "ttfb_avg_ms"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce login time to <2000ms"
      },
      {
        "type": "monitoring",
        "severity": "medium",
        "confidence": 0.65,
        "title": "Comprehensive Performance Monitoring Strategy",
        "description": "Current monitoring insufficient to detect performance regressions early",
        "business_impact": "Delayed incident response, potential undetected performance degradations",
        "root_cause_analysis": "Lack of real-time performance tracking and alerting mechanisms",
        "immediate_actions": [
          "Implement detailed performance logging",
          "Set up real-time alerting thresholds",
          "Create dashboard for key performance indicators"
        ],
        "code_optimizations": [
          "Add detailed performance tracing",
          "Implement granular error tracking",
          "Create custom performance metrics"
        ],
        "long_term_solutions": [
          "Adopt observability platform",
          "Create automated performance regression testing",
          "Develop continuous performance monitoring pipeline"
        ],
        "affected_metrics": [
          "checks_rate",
          "checks_success_rate"
        ],
        "priority_score": "P3",
        "effort_estimate": "medium",
        "expected_improvement": "Proactive performance management"
      },
      {
        "type": "root_cause",
        "severity": "high",
        "confidence": 0.7,
        "title": "Network Latency and TTFB Optimization",
        "description": "Time to First Byte (TTFB) increased from 350ms to 1130ms (222.9% increase)",
        "business_impact": "Slower initial page load, potential user frustration and increased bounce rates",
        "root_cause_analysis": "Potential server-side processing delays, inefficient resource loading, suboptimal CDN configuration",
        "immediate_actions": [
          "Analyze server response generation",
          "Review CDN configuration",
          "Optimize initial resource loading"
        ],
        "code_optimizations": [
          "Implement server-side caching",
          "Use HTTP/2 push for critical resources",
          "Minimize initial render blocking resources"
        ],
        "long_term_solutions": [
          "Implement edge computing strategies",
          "Design progressive loading architecture",
          "Create intelligent resource preloading"
        ],
        "affected_metrics": [
          "ttfb_avg_ms",
          "ttfb_p95_ms",
          "network_latency"
        ],
        "priority_score": "P2",
        "effort_estimate": "medium",
        "expected_improvement": "Reduce TTFB to <400ms"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755896347123",
    "timestamp": "2025-08-22T20:59:07.123Z",
    "baseline": {
      "name": "Baseline Trimmed",
      "timestamp": "2025-08-21T00:00:00.000Z",
      "metrics": {
        "throughput": 480,
        "cpu": 80,
        "memory": 1000
      }
    },
    "current": {
      "name": "Current Trimmed",
      "timestamp": "2025-08-22T00:00:00.000Z",
      "metrics": {
        "throughput": 520,
        "cpu": 122,
        "memory": 1930
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Severe Memory Consumption Spike",
        "description": "93% increase in memory usage from 1000MB to 1930MB indicates potential memory leak or inefficient resource management in Node.js application",
        "business_impact": "Risk of system instability, potential service interruptions, increased infrastructure costs by ~50%",
        "root_cause_analysis": "Likely caused by memory-intensive operations, uncontrolled object references, or poor garbage collection management",
        "immediate_actions": [
          "Implement immediate memory heap profiling",
          "Configure aggressive garbage collection settings",
          "Temporarily increase server memory allocation"
        ],
        "code_optimizations": [
          "Use weak references for large object caches",
          "Implement manual memory cleanup in long-running processes",
          "Leverage stream processing for large data transformations"
        ],
        "long_term_solutions": [
          "Refactor memory-intensive code paths",
          "Implement comprehensive memory monitoring",
          "Design stateless microservices architecture"
        ],
        "affected_metrics": [
          "memory_usage",
          "server_stability"
        ],
        "priority_score": 9,
        "effort_estimate": "high",
        "expected_improvement": "Reduce memory consumption by 60-70%"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "CPU Utilization Extreme Escalation",
        "description": "52.5% CPU usage increase from 80% to 122%, indicating potential computational bottlenecks",
        "business_impact": "Potential system performance degradation, increased operational costs, risk of service unavailability",
        "root_cause_analysis": "Possible inefficient algorithmic complexity, unoptimized database queries, or resource-intensive background tasks",
        "immediate_actions": [
          "Enable CPU profiling",
          "Identify top CPU consuming functions",
          "Implement temporary request throttling"
        ],
        "code_optimizations": [
          "Replace synchronous with asynchronous processing",
          "Optimize computational complexity of core algorithms",
          "Implement efficient caching mechanisms"
        ],
        "long_term_solutions": [
          "Horizontal scaling with load balancing",
          "Implement advanced performance monitoring",
          "Design event-driven, non-blocking architecture"
        ],
        "affected_metrics": [
          "cpu_utilization",
          "request_processing_time"
        ],
        "priority_score": 8,
        "effort_estimate": "high",
        "expected_improvement": "Reduce CPU utilization by 40-50%"
      },
      {
        "type": "optimization",
        "severity": "medium",
        "confidence": 0.75,
        "title": "Performance Monitoring and Alerting Enhancement",
        "description": "Current monitoring insufficient to proactively detect performance degradation",
        "business_impact": "Reduced ability to prevent performance incidents, increased mean time to resolution",
        "root_cause_analysis": "Lack of comprehensive performance observability and real-time alerting",
        "immediate_actions": [
          "Implement advanced APM (Application Performance Monitoring)",
          "Configure granular performance thresholds",
          "Set up automated incident response workflows"
        ],
        "code_optimizations": [
          "Add detailed performance instrumentation",
          "Implement structured logging with performance metrics",
          "Create custom performance monitoring decorators"
        ],
        "long_term_solutions": [
          "Integrate AI-driven anomaly detection",
          "Develop comprehensive performance dashboards",
          "Establish performance engineering culture"
        ],
        "affected_metrics": [
          "incident_response_time",
          "system_observability"
        ],
        "priority_score": 6,
        "effort_estimate": "medium",
        "expected_improvement": "Reduce incident detection time by 40%"
      }
    ],
    "summary": {
      "improved": 1,
      "worse": 2,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755895721144",
    "timestamp": "2025-08-22T20:48:41.144Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T20:48:03.830Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T20:47:26.830Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic Error Rate and Request Failure Spike",
        "description": "Error rate escalated from 0.02 to 1.0 (4900% increase), with successful request rates dropping from 0.98 to 0.6 (-38.8%), indicating systemic application failure",
        "business_impact": "Potential revenue loss of 40-60% due to complete service degradation, high risk of customer churn and brand reputation damage",
        "root_cause_analysis": "Likely caused by recent deployment introducing critical runtime errors, potential unhandled exceptions or infrastructure misconfiguration",
        "immediate_actions": [
          "Immediate rollback to previous stable deployment",
          "Implement emergency circuit breakers",
          "Activate comprehensive error monitoring"
        ],
        "code_optimizations": [
          "Add global error handlers in Node.js entry points",
          "Implement comprehensive try/catch blocks",
          "Create robust request validation middleware"
        ],
        "long_term_solutions": [
          "Develop advanced error tracking infrastructure",
          "Implement comprehensive pre-deployment testing",
          "Create canary deployment mechanisms"
        ],
        "affected_metrics": [
          "error_rate",
          "successful_requests_rate",
          "http_req_failed_rate"
        ],
        "priority_score": 10,
        "effort_estimate": "high",
        "expected_improvement": "Restore 95%+ request success rate"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Extreme Page Load and Navigation Performance Collapse",
        "description": "Page load times exploded from 2800ms to 28102ms (903.6% increase), with navigation times rising from 1200ms to 4659ms (288.3% increase)",
        "business_impact": "Estimated 70-80% potential user abandonment, direct conversion rate reduction, significant SEO ranking degradation",
        "root_cause_analysis": "Potential memory leaks, inefficient database queries, unoptimized frontend rendering, or massive backend processing bottlenecks",
        "immediate_actions": [
          "Profile application memory consumption",
          "Analyze database query performance",
          "Implement aggressive caching strategies"
        ],
        "code_optimizations": [
          "Use Redis/Memcached for critical query caching",
          "Optimize database indexing",
          "Implement lazy loading for non-critical resources"
        ],
        "long_term_solutions": [
          "Redesign application state management",
          "Implement server-side rendering optimization",
          "Create microservice architecture for load distribution"
        ],
        "affected_metrics": [
          "page_load_avg_ms",
          "navigation_avg_ms",
          "ttfb_avg_ms"
        ],
        "priority_score": 9,
        "effort_estimate": "high",
        "expected_improvement": "Reduce page load times by 70-80%"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Network Request and API Response Time Degradation",
        "description": "HTTP request average time increased from 250.5ms to 1657.9ms (561.9% increase), with p95 times jumping from 420.7ms to 4756.96ms (1030.7% increase)",
        "business_impact": "Estimated 40-50% user experience reduction, potential revenue loss through slow transaction processing",
        "root_cause_analysis": "Potential network configuration issues, inefficient API design, lack of request parallelization",
        "immediate_actions": [
          "Implement request timeout mechanisms",
          "Add comprehensive network latency monitoring",
          "Optimize API endpoint designs"
        ],
        "code_optimizations": [
          "Use Promise.all() for parallel requests",
          "Implement request batching strategies",
          "Add sophisticated retry mechanisms"
        ],
        "long_term_solutions": [
          "Develop advanced API gateway",
          "Implement intelligent request scheduling",
          "Create comprehensive performance testing framework"
        ],
        "affected_metrics": [
          "http_req_avg_ms",
          "http_req_p95_ms"
        ],
        "priority_score": 8,
        "effort_estimate": "medium",
        "expected_improvement": "Reduce API response times by 60-70%"
      },
      {
        "type": "monitoring",
        "severity": "medium",
        "confidence": 0.65,
        "title": "Login and Authentication Performance Bottleneck",
        "description": "Login process time increased from 1800ms to 8940ms (396.7% increase), indicating potential authentication service issues",
        "business_impact": "User onboarding friction, potential 25-35% registration abandonment rate",
        "root_cause_analysis": "Inefficient authentication middleware, complex user validation processes, potential database connection pooling issues",
        "immediate_actions": [
          "Profile authentication service performance",
          "Optimize user validation logic",
          "Implement connection pooling"
        ],
        "code_optimizations": [
          "Streamline authentication middleware",
          "Use lightweight JWT tokens",
          "Implement efficient database connection management"
        ],
        "long_term_solutions": [
          "Consider dedicated authentication microservice",
          "Implement advanced caching for user sessions",
          "Create multi-tier authentication strategies"
        ],
        "affected_metrics": [
          "login_avg_ms",
          "login_p95_ms"
        ],
        "priority_score": 6,
        "effort_estimate": "medium",
        "expected_improvement": "Reduce login times by 50-60%"
      },
      {
        "type": "critical_issue",
        "severity": "high",
        "confidence": 0.7,
        "title": "Core Web Vitals and Frontend Performance Regression",
        "description": "First Contentful Paint (FCP) degraded from 1200ms to 4814ms (301.2% increase), Largest Contentful Paint (LCP) worsened from 1800ms to 5598ms (211% increase)",
        "business_impact": "SEO ranking reduction, estimated 30-40% organic traffic loss, significant user experience degradation",
        "root_cause_analysis": "Potential issues with frontend bundle size, inefficient rendering strategies, unoptimized asset loading",
        "immediate_actions": [
          "Analyze frontend bundle composition",
          "Implement code splitting",
          "Optimize critical rendering path"
        ],
        "code_optimizations": [
          "Use dynamic imports for non-critical modules",
          "Implement lazy loading for components",
          "Minimize render-blocking resources"
        ],
        "long_term_solutions": [
          "Migrate to server-side rendering",
          "Implement progressive loading strategies",
          "Create comprehensive performance budget"
        ],
        "affected_metrics": [
          "fcp_avg_ms",
          "lcp_avg_ms",
          "cls_avg"
        ],
        "priority_score": 7,
        "effort_estimate": "high",
        "expected_improvement": "Improve Core Web Vitals by 60-70%"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755895508666",
    "timestamp": "2025-08-22T20:45:08.666Z",
    "baseline": {
      "name": "Baseline Trimmed",
      "timestamp": "2025-08-21T00:00:00Z",
      "metrics": {
        "throughput": 480,
        "cpu": 80,
        "memory": 1000
      }
    },
    "current": {
      "name": "Current Trimmed",
      "timestamp": "2025-08-22T00:00:00Z",
      "metrics": {
        "throughput": 520,
        "cpu": 122,
        "memory": 1930
      }
    },
    "insights": {
      "performance_insights": [
        {
          "type": "root_cause",
          "severity": "critical",
          "confidence": 0.92,
          "title": "Node.js Memory Leak and Resource Exhaustion",
          "description": "Exponential memory growth and CPU saturation indicate potential memory management failures in application runtime",
          "actionable_steps": [
            "Profile memory heap using v8 inspector",
            "Implement memory leak detection scripts",
            "Review async/promise handling in core service modules",
            "Set aggressive garbage collection parameters"
          ],
          "affected_metrics": [
            "memory_usage",
            "cpu_utilization",
            "request_latency"
          ],
          "business_impact": "High risk of service unavailability and potential revenue loss",
          "effort_estimate": "high"
        },
        {
          "type": "suggestion",
          "severity": "high",
          "confidence": 0.85,
          "title": "Microservice Resource Optimization",
          "description": "Current infrastructure scaling cannot handle growing workload efficiently",
          "actionable_steps": [
            "Implement horizontal pod autoscaling",
            "Configure CPU/memory request and limits",
            "Use node affinity for workload distribution",
            "Add predictive scaling based on traffic patterns"
          ],
          "affected_metrics": [
            "cpu_utilization",
            "memory_usage",
            "request_throughput"
          ],
          "business_impact": "Improve system resilience and reduce infrastructure costs",
          "effort_estimate": "medium"
        },
        {
          "type": "prediction",
          "severity": "medium",
          "confidence": 0.78,
          "title": "Performance Capacity Forecast",
          "description": "Current growth trajectory suggests imminent infrastructure bottlenecks",
          "actionable_steps": [
            "Conduct comprehensive performance load testing",
            "Design capacity expansion roadmap",
            "Evaluate distributed caching strategies",
            "Consider migration to more efficient runtime"
          ],
          "affected_metrics": [
            "request_latency",
            "system_throughput",
            "resource_utilization"
          ],
          "business_impact": "Proactively prevent potential service degradation",
          "effort_estimate": "high"
        }
      ]
    },
    "summary": {
      "improved": 1,
      "worse": 2,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755895443232",
    "timestamp": "2025-08-22T20:44:03.232Z",
    "baseline": {
      "name": "Benchmark",
      "timestamp": "2025-08-01T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 120,
        "responseTimeP95": 200,
        "throughput": 500,
        "errorRate": 0.5,
        "cpu": 65,
        "memory": 800
      }
    },
    "current": {
      "name": "Current",
      "timestamp": "2025-08-15T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 110,
        "responseTimeP95": 140,
        "throughput": 460,
        "errorRate": 1.2,
        "cpu": 25,
        "memory": 950
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance analysis, here's a strategic performance optimization insights report:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.85,\n    \"title\": \"Unexpected Error Rate Spike Indicates System Instability\",\n    \"description\": \"Error rate escalated 140% from 0.5% to 1.2%, signaling potential architectural vulnerabilities\",\n    \"actionable_steps\": [\n      \"Conduct comprehensive error log trace analysis\",\n      \"Implement enhance...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 3,
      "worse": 3,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755894570190",
    "timestamp": "2025-08-22T20:29:30.190Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T20:21:10.145Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T20:20:48.420Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance analysis, here's a strategic insights report:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.92,\n    \"title\": \"Systemic HTTP Request Performance Collapse\",\n    \"description\": \"Massive degradation in HTTP request processing, with average response times increasing by 561% and critical failure rates\",\n    \"actionable_steps\": [\n      \"Analyze middleware and request handling layers\",\n      \"Profile database query perfor...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755894111324",
    "timestamp": "2025-08-22T20:21:51.324Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T20:21:10.145Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T20:20:48.420Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "critical_issue",
        "severity": "critical",
        "confidence": 0.95,
        "title": "Catastrophic API Response Time and Error Rate Degradation",
        "description": "System experiencing massive performance collapse with 1062.8% increase in HTTP request failure rates and 561.9% increase in average HTTP request latency",
        "business_impact": "Potential 50%+ revenue loss, critical user experience breakdown, potential customer churn",
        "root_cause_analysis": "Likely combination of backend resource exhaustion, inefficient database queries, and potential infrastructure scaling issues",
        "immediate_actions": [
          "Implement emergency circuit breakers",
          "Rollback recent deployments",
          "Increase server resources immediately"
        ],
        "code_optimizations": [
          "Optimize database query indexing",
          "Implement connection pooling",
          "Add request timeout mechanisms"
        ],
        "long_term_solutions": [
          "Comprehensive performance architecture review",
          "Implement advanced caching strategies",
          "Migrate to distributed microservice architecture"
        ],
        "affected_metrics": [
          "http_req_failed_rate",
          "http_req_avg_ms",
          "error_rate"
        ],
        "priority_score": 10,
        "effort_estimate": "high",
        "expected_improvement": "70-85% performance recovery"
      },
      {
        "type": "root_cause",
        "severity": "critical",
        "confidence": 0.85,
        "title": "Severe Page Load and Navigation Performance Collapse",
        "description": "Page load times increased by 903.6%, navigation times by 288.3%, indicating systemic performance breakdown",
        "business_impact": "Potential 40% conversion rate reduction, severe SEO ranking damage",
        "root_cause_analysis": "Likely frontend rendering bottlenecks, unoptimized asset loading, potential memory leaks in JavaScript",
        "immediate_actions": [
          "Enable browser-level performance monitoring",
          "Implement lazy loading for critical resources",
          "Compress and minify frontend assets"
        ],
        "code_optimizations": [
          "Refactor React component rendering logic",
          "Implement code splitting",
          "Optimize JavaScript bundle size"
        ],
        "long_term_solutions": [
          "Migrate to server-side rendering",
          "Implement advanced performance budgeting",
          "Develop comprehensive frontend optimization strategy"
        ],
        "affected_metrics": [
          "page_load_avg_ms",
          "navigation_avg_ms",
          "fcp_avg_ms"
        ],
        "priority_score": 9,
        "effort_estimate": "high",
        "expected_improvement": "60-75% load time reduction"
      },
      {
        "type": "optimization",
        "severity": "high",
        "confidence": 0.75,
        "title": "Database Query and Backend Latency Optimization",
        "description": "TTFB increased by 222.9%, indicating significant backend processing delays",
        "business_impact": "25-35% potential performance overhead, increased infrastructure costs",
        "root_cause_analysis": "Inefficient database queries, lack of proper indexing, potential N+1 query problems",
        "immediate_actions": [
          "Profile and analyze slow database queries",
          "Add missing database indexes",
          "Implement query result caching"
        ],
        "code_optimizations": [
          "Use database query explain plans",
          "Implement database-level query optimizations",
          "Replace inefficient ORM operations"
        ],
        "long_term_solutions": [
          "Implement read replicas",
          "Design database sharding strategy",
          "Develop comprehensive query optimization framework"
        ],
        "affected_metrics": [
          "ttfb_avg_ms",
          "ttfb_p95_ms"
        ],
        "priority_score": 8,
        "effort_estimate": "medium",
        "expected_improvement": "50-65% backend latency reduction"
      },
      {
        "type": "monitoring",
        "severity": "medium",
        "confidence": 0.65,
        "title": "Enhanced Performance Monitoring and Alerting",
        "description": "Current monitoring insufficient to detect rapid performance degradation",
        "business_impact": "Delayed incident response, increased operational risk",
        "root_cause_analysis": "Lack of real-time performance monitoring and intelligent alerting mechanisms",
        "immediate_actions": [
          "Implement advanced APM tools",
          "Set up proactive performance thresholds",
          "Create comprehensive performance dashboards"
        ],
        "code_optimizations": [
          "Add granular performance instrumentation",
          "Develop custom performance tracking middleware",
          "Implement distributed tracing"
        ],
        "long_term_solutions": [
          "Build machine learning-based anomaly detection",
          "Create automated performance regression testing",
          "Develop comprehensive observability strategy"
        ],
        "affected_metrics": [
          "checks_success_rate",
          "total_requests"
        ],
        "priority_score": 6,
        "effort_estimate": "medium",
        "expected_improvement": "40-50% faster incident detection"
      },
      {
        "type": "critical_issue",
        "severity": "high",
        "confidence": 0.7,
        "title": "Login and Authentication Performance Bottleneck",
        "description": "Login process experiencing 396.7% latency increase, critical user onboarding friction",
        "business_impact": "Potential 30% user abandonment during authentication",
        "root_cause_analysis": "Inefficient authentication middleware, complex login validation, potential external service dependencies",
        "immediate_actions": [
          "Simplify authentication flow",
          "Implement lightweight token generation",
          "Add connection timeouts for external services"
        ],
        "code_optimizations": [
          "Optimize JWT token generation",
          "Implement efficient session management",
          "Use connection pooling for auth services"
        ],
        "long_term_solutions": [
          "Develop microservice-based authentication",
          "Implement advanced caching for user sessions",
          "Create multi-tier authentication strategy"
        ],
        "affected_metrics": [
          "login_avg_ms",
          "login_p95_ms"
        ],
        "priority_score": 7,
        "effort_estimate": "medium",
        "expected_improvement": "60-70% login performance enhancement"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755891428759",
    "timestamp": "2025-08-22T19:37:08.759Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T19:36:40.753Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T19:36:18.022Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance metrics analysis, here are the prioritized insights:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\",\n    \"confidence\": 0.95,\n    \"title\": \"Catastrophic HTTP Request Performance Degradation\",\n    \"description\": \"Massive increase in HTTP request latency and failure rates indicating systemic backend infrastructure issues\",\n    \"actionable_steps\": [\n      \"Immediate investigation of backend service health\",\n      \"Review recent infrastructu...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755890679373",
    "timestamp": "2025-08-22T19:24:39.373Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T19:24:11.645Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T19:23:50.991Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance metrics analysis, here are the critical insights:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.95,\n    \"title\": \"Catastrophic System Performance Degradation\",\n    \"description\": \"Systemic performance collapse with multiple critical metrics showing 200-1000% deterioration across request handling, page load, and user interaction times\",\n    \"actionable_steps\": [\n      \"Immediate full system architecture and depende...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755890505022",
    "timestamp": "2025-08-22T19:21:45.022Z",
    "baseline": {
      "name": "Baseline Trimmed",
      "timestamp": "2025-08-21T00:00:00Z",
      "metrics": {
        "throughput": 480,
        "cpu": 80,
        "memory": 1000
      }
    },
    "current": {
      "name": "Current Trimmed",
      "timestamp": "2025-08-22T00:00:00Z",
      "metrics": {
        "throughput": 520,
        "cpu": 122,
        "memory": 1930
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the performance metrics analysis, here's a comprehensive optimization insights report:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.95,\n    \"title\": \"CPU and Memory Resource Overutilization\",\n    \"description\": \"Significant resource consumption spike indicates potential memory leaks, inefficient processing, or unoptimized code paths\",\n    \"actionable_steps\": [\n      \"Perform comprehensive memory profiling\",\n      \"Implement memory leak detect...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 1,
      "worse": 2,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755890494673",
    "timestamp": "2025-08-22T19:21:34.673Z",
    "baseline": {
      "name": "Test",
      "metrics": {
        "responseTimeAvg": 100
      }
    },
    "current": {
      "name": "Test",
      "metrics": {
        "responseTimeAvg": 200
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the performance analysis request, here's a comprehensive optimization insights report:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.85,\n    \"title\": \"Response Time Exponential Degradation\",\n    \"description\": \"Significant 100% increase in average response time indicates potential systemic performance bottleneck\",\n    \"actionable_steps\": [\n      \"Conduct immediate database query profiling\",\n      \"Review recent code deployments for inefficient...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 0,
      "worse": 1,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755890423074",
    "timestamp": "2025-08-22T19:20:23.074Z",
    "baseline": {
      "metrics": {
        "throughput": 50,
        "responseTimeAvg": 100
      },
      "name": "Test Baseline"
    },
    "current": {
      "metrics": {
        "throughput": 40,
        "responseTimeAvg": 200
      },
      "name": "Test Current"
    },
    "insights": {
      "performance_insights": [
        {
          "type": "root_cause",
          "severity": "critical",
          "confidence": 0.85,
          "title": "Response Time Degradation Root Cause Analysis",
          "description": "Sharp 100% increase in average response time indicates potential systemic performance bottleneck",
          "actionable_steps": [
            "Profile application request lifecycle",
            "Identify database query latency contributors",
            "Review recent code deployments for inefficient algorithms"
          ],
          "affected_metrics": [
            "response_time",
            "throughput"
          ],
          "business_impact": "Direct revenue and user experience risk",
          "effort_estimate": "medium"
        },
        {
          "type": "suggestion",
          "severity": "high",
          "confidence": 0.75,
          "title": "Throughput Optimization Strategy",
          "description": "20% throughput reduction suggests potential scaling or architectural constraints",
          "actionable_steps": [
            "Implement horizontal service scaling",
            "Optimize connection pooling",
            "Review load balancing configuration"
          ],
          "affected_metrics": [
            "request_per_second",
            "concurrent_connections"
          ],
          "business_impact": "Potential service capacity reduction",
          "effort_estimate": "medium"
        },
        {
          "type": "prediction",
          "severity": "medium",
          "confidence": 0.65,
          "title": "Performance Trend Forecasting",
          "description": "Current degradation trajectory indicates potential exponential performance decline",
          "actionable_steps": [
            "Conduct comprehensive performance audit",
            "Develop predictive performance model",
            "Establish proactive monitoring thresholds"
          ],
          "affected_metrics": [
            "response_time_trend",
            "error_rate"
          ],
          "business_impact": "Long-term system reliability risk",
          "effort_estimate": "high"
        }
      ]
    },
    "summary": {
      "improved": 0,
      "worse": 2,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755889985254",
    "timestamp": "2025-08-22T19:13:05.254Z",
    "baseline": {
      "name": "Baseline Trimmed",
      "timestamp": "2025-08-21T00:00:00Z",
      "metrics": {
        "throughput": 480,
        "cpu": 80,
        "memory": 1000
      }
    },
    "current": {
      "name": "Current Trimmed",
      "timestamp": "2025-08-22T00:00:00Z",
      "metrics": {
        "throughput": 520,
        "cpu": 122,
        "memory": 1930
      }
    },
    "insights": {
      "performance_insights": [
        {
          "type": "root_cause",
          "severity": "critical",
          "confidence": 0.92,
          "title": "Memory Leak and Resource Exhaustion Detected",
          "description": "Significant memory growth (+93%) indicates potential memory management issues in Node.js application",
          "actionable_steps": [
            "Profile application memory usage using heapdump",
            "Implement memory leak detection in CI/CD pipeline",
            "Review long-running processes and object references",
            "Add automated memory threshold monitoring"
          ],
          "affected_metrics": [
            "memory_usage",
            "cpu_utilization"
          ],
          "business_impact": "Increased infrastructure costs and potential service degradation",
          "effort_estimate": "high"
        },
        {
          "type": "suggestion",
          "severity": "high",
          "confidence": 0.85,
          "title": "CPU Performance Optimization",
          "description": "CPU utilization spike suggests inefficient processing patterns",
          "actionable_steps": [
            "Conduct performance profiling using Node.js built-in profiler",
            "Optimize expensive computational loops",
            "Implement worker threads for CPU-intensive tasks",
            "Consider horizontal scaling strategy"
          ],
          "affected_metrics": [
            "cpu_utilization",
            "request_latency"
          ],
          "business_impact": "Improved application responsiveness and reduced infrastructure costs",
          "effort_estimate": "medium"
        },
        {
          "type": "prediction",
          "severity": "medium",
          "confidence": 0.75,
          "title": "Scalability Risk Assessment",
          "description": "Current performance metrics suggest potential scalability constraints",
          "actionable_steps": [
            "Design load testing scenarios",
            "Implement auto-scaling configurations",
            "Review application architecture for horizontal scaling",
            "Evaluate microservices decomposition opportunities"
          ],
          "affected_metrics": [
            "throughput",
            "response_time"
          ],
          "business_impact": "Enhanced system reliability and performance predictability",
          "effort_estimate": "high"
        }
      ]
    },
    "summary": {
      "improved": 1,
      "worse": 2,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755889633905",
    "timestamp": "2025-08-22T19:07:13.905Z",
    "baseline": {
      "name": "Baseline Trimmed",
      "timestamp": "2025-08-21T00:00:00Z",
      "metrics": {
        "throughput": 480,
        "cpu": 80,
        "memory": 1000
      }
    },
    "current": {
      "name": "Current Trimmed",
      "timestamp": "2025-08-22T00:00:00Z",
      "metrics": {
        "throughput": 520,
        "cpu": 122,
        "memory": 1930
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the performance metrics and system context, here's a comprehensive performance optimization analysis:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\", \n    \"confidence\": 0.85,\n    \"title\": \"Memory Leak and Resource Exhaustion\",\n    \"description\": \"Significant memory growth indicates potential memory management issues in Node.js application\",\n    \"actionable_steps\": [\n      \"Profile memory usage with V8 heap snapshots\",\n      \"Implement memory leak detection using Chr...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 1,
      "worse": 2,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755889539979",
    "timestamp": "2025-08-22T19:05:39.979Z",
    "baseline": {
      "name": "Benchmark",
      "timestamp": "2025-08-01T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 120,
        "responseTimeP95": 200,
        "throughput": 500,
        "errorRate": 0.5,
        "cpu": 65,
        "memory": 800
      }
    },
    "current": {
      "name": "Current",
      "timestamp": "2025-08-15T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 110,
        "responseTimeP95": 140,
        "throughput": 460,
        "errorRate": 1.2,
        "cpu": 25,
        "memory": 950
      }
    },
    "insights": {
      "performance_insights": [
        {
          "type": "root_cause",
          "severity": "high",
          "confidence": 0.85,
          "title": "Elevated Error Rate Indicates Underlying System Instability",
          "description": "Error rate increased 140% from 0.5% to 1.2%, suggesting potential architectural or dependency issues",
          "actionable_steps": [
            "Perform comprehensive error log analysis",
            "Trace and identify specific error sources",
            "Implement enhanced error handling and retry mechanisms",
            "Review recent dependency upgrades/changes"
          ],
          "affected_metrics": [
            "error_rate",
            "throughput"
          ],
          "business_impact": "Risk of customer experience degradation and potential revenue loss",
          "effort_estimate": "medium"
        },
        {
          "type": "anomaly",
          "severity": "medium",
          "confidence": 0.72,
          "title": "Memory Consumption Trend Shows Potential Memory Leak",
          "description": "Memory usage increased 18.8% without corresponding performance gains",
          "actionable_steps": [
            "Profile memory usage with Node.js memory profiler",
            "Identify and optimize memory-intensive functions",
            "Implement aggressive garbage collection strategies",
            "Consider implementing memory circuit breakers"
          ],
          "affected_metrics": [
            "memory",
            "cpu_utilization"
          ],
          "business_impact": "Increased infrastructure costs and potential system instability",
          "effort_estimate": "high"
        },
        {
          "type": "suggestion",
          "severity": "low",
          "confidence": 0.65,
          "title": "Optimize Request Throughput Performance",
          "description": "Throughput decreased 8% which could impact system scalability",
          "actionable_steps": [
            "Review and optimize database query patterns",
            "Implement request-level caching strategies",
            "Evaluate horizontal scaling options",
            "Analyze bottleneck components in request lifecycle"
          ],
          "affected_metrics": [
            "throughput",
            "response_time"
          ],
          "business_impact": "Improved system responsiveness and customer satisfaction",
          "effort_estimate": "medium"
        }
      ]
    },
    "summary": {
      "improved": 3,
      "worse": 3,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755885148592",
    "timestamp": "2025-08-22T17:52:28.592Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T17:52:17.744Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T17:51:54.112Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req failed rate",
        "description": "http req failed rate has degraded by 1062.8%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_failed_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in navigation avg ms",
        "description": "navigation avg ms has degraded by 288.3%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "navigation_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Significant degradation in successful requests rate",
        "description": "successful requests rate has degraded by 38.8%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "successful_requests_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req avg ms",
        "description": "http req avg ms has degraded by 561.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req p95 ms",
        "description": "http req p95 ms has degraded by 1030.7%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in page load avg ms",
        "description": "page load avg ms has degraded by 903.6%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "page_load_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in page load p95 ms",
        "description": "page load p95 ms has degraded by 751.6%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "page_load_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in error rate",
        "description": "error rate has degraded by 4900.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "error_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in fcp avg ms",
        "description": "fcp avg ms has degraded by 301.2%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "fcp_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in fcp p95 ms",
        "description": "fcp p95 ms has degraded by 321.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "fcp_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in lcp avg ms",
        "description": "lcp avg ms has degraded by 211.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "lcp_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in lcp p95 ms",
        "description": "lcp p95 ms has degraded by 218.5%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "lcp_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in login avg ms",
        "description": "login avg ms has degraded by 396.7%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "login_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in login p95 ms",
        "description": "login p95 ms has degraded by 272.5%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "login_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in ttfb avg ms",
        "description": "ttfb avg ms has degraded by 222.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "ttfb_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in ttfb p95 ms",
        "description": "ttfb p95 ms has degraded by 359.3%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "ttfb_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in checks total passes",
        "description": "checks total passes has degraded by 90.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "checks_total_passes"
        ]
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755870393450",
    "timestamp": "2025-08-22T13:46:33.450Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-22T13:46:02.402Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-22T13:45:42.012Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "suggestion",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Performance Analysis Completed",
        "description": "Based on the comprehensive performance metrics analysis, here are the prioritized insights:\n\n```json\n[\n  {\n    \"type\": \"root_cause\",\n    \"severity\": \"critical\",\n    \"confidence\": 0.95,\n    \"title\": \"Catastrophic HTTP Request Failure and Performance Degradation\",\n    \"description\": \"Massive spike in HTTP request failure rate and significant latency increases across multiple performance metrics\",\n    \"actionable_steps\": [\n      \"Conduct immediate infrastructure and network connectivity audit\",\n   ...",
        "actionable_steps": [
          "Review the full analysis results"
        ],
        "affected_metrics": [],
        "business_impact": "Performance analysis insights provided"
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755812452809",
    "timestamp": "2025-08-21T21:40:52.809Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-21T21:40:42.848Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-21T21:40:18.771Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req failed rate",
        "description": "http req failed rate has degraded by 1062.8%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_failed_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in navigation avg ms",
        "description": "navigation avg ms has degraded by 288.3%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "navigation_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Significant degradation in successful requests rate",
        "description": "successful requests rate has degraded by 38.8%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "successful_requests_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req avg ms",
        "description": "http req avg ms has degraded by 561.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req p95 ms",
        "description": "http req p95 ms has degraded by 1030.7%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in page load avg ms",
        "description": "page load avg ms has degraded by 903.6%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "page_load_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in page load p95 ms",
        "description": "page load p95 ms has degraded by 751.6%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "page_load_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in error rate",
        "description": "error rate has degraded by 4900.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "error_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in fcp avg ms",
        "description": "fcp avg ms has degraded by 301.2%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "fcp_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in fcp p95 ms",
        "description": "fcp p95 ms has degraded by 321.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "fcp_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in lcp avg ms",
        "description": "lcp avg ms has degraded by 211.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "lcp_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in lcp p95 ms",
        "description": "lcp p95 ms has degraded by 218.5%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "lcp_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in login avg ms",
        "description": "login avg ms has degraded by 396.7%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "login_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in login p95 ms",
        "description": "login p95 ms has degraded by 272.5%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "login_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in ttfb avg ms",
        "description": "ttfb avg ms has degraded by 222.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "ttfb_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in ttfb p95 ms",
        "description": "ttfb p95 ms has degraded by 359.3%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "ttfb_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in checks total passes",
        "description": "checks total passes has degraded by 90.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "checks_total_passes"
        ]
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755811664426",
    "timestamp": "2025-08-21T21:27:44.426Z",
    "baseline": {
      "name": "baseline",
      "timestamp": "2025-08-21T21:27:33.826Z",
      "metrics": {
        "checks_rate": 1,
        "http_req_failed_rate": 0.001,
        "inp_avg_ms": 80,
        "inp_p95_ms": 115,
        "navigation_avg_ms": 1200,
        "successful_requests_rate": 0.98,
        "successful_requests_threshold_ok": 1,
        "http_req_avg_ms": 250.5,
        "http_req_p95_ms": 420.7,
        "fid_avg_ms": 45,
        "fid_p95_ms": 75,
        "cls_avg": 0.025,
        "page_load_avg_ms": 2800,
        "page_load_p95_ms": 3300,
        "error_rate": 0.02,
        "errors_threshold_ok": 1,
        "fcp_avg_ms": 1200,
        "fcp_p95_ms": 1550,
        "lcp_avg_ms": 1800,
        "lcp_p95_ms": 2300,
        "login_avg_ms": 1800,
        "login_p95_ms": 2400,
        "login_time_threshold_ok": 1,
        "ttfb_avg_ms": 350,
        "ttfb_p95_ms": 500,
        "checks_total_passes": 40,
        "checks_total_fails": 0,
        "checks_success_rate": 1
      }
    },
    "current": {
      "name": "current",
      "timestamp": "2025-08-21T21:27:09.840Z",
      "metrics": {
        "checks_rate": 0.8,
        "http_req_failed_rate": 0.011627906976744186,
        "inp_avg_ms": 32,
        "inp_p95_ms": 32,
        "total_iterations": 1,
        "navigation_avg_ms": 4659,
        "successful_requests_rate": 0.6,
        "successful_requests_threshold_ok": 0,
        "http_req_avg_ms": 1657.9489186046517,
        "http_req_p95_ms": 4756.96365,
        "total_requests": 2,
        "fid_avg_ms": 2,
        "fid_p95_ms": 2.720000010728836,
        "cls_avg": 0.010938189160492686,
        "page_load_avg_ms": 28102,
        "page_load_p95_ms": 28102,
        "error_rate": 1,
        "errors_threshold_ok": 0,
        "fcp_avg_ms": 4814.666666666667,
        "fcp_p95_ms": 6539.2,
        "lcp_avg_ms": 5598.666666666667,
        "lcp_p95_ms": 7326,
        "login_avg_ms": 8940,
        "login_p95_ms": 8940,
        "login_time_threshold_ok": 0,
        "ttfb_avg_ms": 1130.1428571343422,
        "ttfb_p95_ms": 2296.469999989867,
        "checks_total_passes": 4,
        "checks_total_fails": 1,
        "checks_success_rate": 0.8
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req failed rate",
        "description": "http req failed rate has degraded by 1062.8%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_failed_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in navigation avg ms",
        "description": "navigation avg ms has degraded by 288.3%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "navigation_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "medium",
        "confidence": 0.8,
        "title": "Significant degradation in successful requests rate",
        "description": "successful requests rate has degraded by 38.8%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "successful_requests_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req avg ms",
        "description": "http req avg ms has degraded by 561.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in http req p95 ms",
        "description": "http req p95 ms has degraded by 1030.7%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "http_req_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in page load avg ms",
        "description": "page load avg ms has degraded by 903.6%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "page_load_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in page load p95 ms",
        "description": "page load p95 ms has degraded by 751.6%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "page_load_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in error rate",
        "description": "error rate has degraded by 4900.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "error_rate"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in fcp avg ms",
        "description": "fcp avg ms has degraded by 301.2%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "fcp_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in fcp p95 ms",
        "description": "fcp p95 ms has degraded by 321.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "fcp_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in lcp avg ms",
        "description": "lcp avg ms has degraded by 211.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "lcp_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in lcp p95 ms",
        "description": "lcp p95 ms has degraded by 218.5%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "lcp_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in login avg ms",
        "description": "login avg ms has degraded by 396.7%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "login_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in login p95 ms",
        "description": "login p95 ms has degraded by 272.5%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "login_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in ttfb avg ms",
        "description": "ttfb avg ms has degraded by 222.9%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "ttfb_avg_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in ttfb p95 ms",
        "description": "ttfb p95 ms has degraded by 359.3%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "ttfb_p95_ms"
        ]
      },
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in checks total passes",
        "description": "checks total passes has degraded by 90.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "checks_total_passes"
        ]
      }
    ],
    "summary": {
      "improved": 6,
      "worse": 18,
      "same": 0,
      "unknown": 6
    }
  },
  {
    "id": "1755771775493",
    "timestamp": "2025-08-21T10:22:55.493Z",
    "baseline": {
      "name": "Benchmark",
      "timestamp": "2025-08-01T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 120,
        "responseTimeP95": 200,
        "throughput": 500,
        "errorRate": 0.5,
        "cpu": 65,
        "memory": 800
      }
    },
    "current": {
      "name": "Current",
      "timestamp": "2025-08-15T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 110,
        "responseTimeP95": 140,
        "throughput": 460,
        "errorRate": 1.2,
        "cpu": 25,
        "memory": 950
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in Error Rate (%)",
        "description": "Error Rate (%) has degraded by 140.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "errorRate"
        ]
      }
    ],
    "summary": {
      "improved": 3,
      "worse": 3,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755771716139",
    "timestamp": "2025-08-21T10:21:56.139Z",
    "baseline": {
      "name": "Benchmark",
      "timestamp": "2025-08-01T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 120,
        "responseTimeP95": 200,
        "throughput": 500,
        "errorRate": 0.5,
        "cpu": 65,
        "memory": 800
      }
    },
    "current": {
      "name": "Current",
      "timestamp": "2025-08-15T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 110,
        "responseTimeP95": 140,
        "throughput": 460,
        "errorRate": 1.2,
        "cpu": 25,
        "memory": 950
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in Error Rate (%)",
        "description": "Error Rate (%) has degraded by 140.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "errorRate"
        ]
      }
    ],
    "summary": {
      "improved": 3,
      "worse": 3,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755771709456",
    "timestamp": "2025-08-21T10:21:49.456Z",
    "baseline": {
      "name": "Benchmark",
      "timestamp": "2025-08-01T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 120,
        "responseTimeP95": 200,
        "throughput": 500,
        "errorRate": 0.5,
        "cpu": 65,
        "memory": 800
      }
    },
    "current": {
      "name": "Current",
      "timestamp": "2025-08-15T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 110,
        "responseTimeP95": 140,
        "throughput": 460,
        "errorRate": 1.2,
        "cpu": 25,
        "memory": 950
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in Error Rate (%)",
        "description": "Error Rate (%) has degraded by 140.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "errorRate"
        ]
      }
    ],
    "summary": {
      "improved": 3,
      "worse": 3,
      "same": 0,
      "unknown": 0
    }
  },
  {
    "id": "1755771328831",
    "timestamp": "2025-08-21T10:15:28.831Z",
    "baseline": {
      "name": "Benchmark",
      "timestamp": "2025-08-01T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 120,
        "responseTimeP95": 200,
        "throughput": 500,
        "errorRate": 0.5,
        "cpu": 65,
        "memory": 800
      }
    },
    "current": {
      "name": "Current",
      "timestamp": "2025-08-15T10:00:00Z",
      "metrics": {
        "responseTimeAvg": 110,
        "responseTimeP95": 140,
        "throughput": 460,
        "errorRate": 1.2,
        "cpu": 25,
        "memory": 950
      }
    },
    "insights": [
      {
        "type": "anomaly",
        "severity": "high",
        "confidence": 0.8,
        "title": "Significant degradation in Error Rate (%)",
        "description": "Error Rate (%) has degraded by 140.0%, which exceeds normal variation.",
        "actionable_steps": [
          "Review recent deployments or configuration changes",
          "Check system resource utilization",
          "Analyze error logs for this time period"
        ],
        "affected_metrics": [
          "errorRate"
        ]
      }
    ],
    "summary": {
      "improved": 3,
      "worse": 3,
      "same": 0,
      "unknown": 0
    }
  }
]